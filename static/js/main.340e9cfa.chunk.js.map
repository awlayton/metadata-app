{"version":3,"sources":["serviceWorker.js","styles.ts","surveyModel.ts","autocompleteWidget.js","tagboxWidget.js","unanswered.js","Questions.tsx","PagesDrawer.tsx","ConfirmSubmitDialog.tsx","DebugButton.js","ErrorDisplay.js","googleScopes.js","describe.js","describe-loader.js","App.tsx","main/modules/localstore/index.js","main/providers.ts","main/errors.js","main/actions.ts","main/sequences.ts","main/computeds.ts","pages/0-general.js","pages/1-place.js","pages/anomalies.js","pages/harvest/conditions.js","pages/harvest/transport.js","pages/machinery.js","pages/planting/chemicals.js","pages/planting/seed.js","pages/sensors.js","pages/spraying/chemicals.js","pages/tillage/conditions.js","pages/uav/b4ufly.js","pages/uav/drone.js","pages/uav/operator.js","pages/uav/sensors.js","pages-loader.js","pages.ts","main/index.ts","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","drawerWidth","styles","theme","createStyles","root","display","alignItems","justifyContent","content","textAlign","flexGrow","alignSelf","maxWidth","appBar","top","bottom","marginLeft","breakpoints","up","width","toolbar","mixins","bottomBar","grow","menuButton","marginRight","drawer","flexShrink","drawerPaper","icon","fontSize","iconVariant","opacity","spacing","backgroundColor","palette","dark","ssPreview","model","require","$","Survey","metaData","addProperty","name","default","autocompleteWidget","widgetIsLoaded","ui","autocomplete","render","question","isDefaultRender","isFit","activatedByChanged","activatedBy","findProperty","afterRender","el","is","find","appendTo","classes","source","choices","map","it","text","willUnMount","info","debug","tagboxWidget","title","iconName","fn","select2","defaultJSON","htmlTemplate","getType","addClass","visible","tagbox","properties","fixStyles","e","parentElement","querySelector","style","border","self","this","settings","tags","disabled","isReadOnly","placeholder","placeHolder","tokenSeparators","select2Config","$el","updateValueHandler","value","forEach","length","option","Option","append","trigger","val","updateChoices","empty","ajax","data","visibleChoices","choice","id","readOnlyChangedCallback","prop","registerFunctionOnPropertyValueChanged","valueChangedCallback","setValue","some","params","push","on","willUnmount","off","unanswered","isEmpty","every","undefined","CustomWidgetCollection","Instance","addCustomWidget","acwidget","tbwidget","JsonObject","bind","loggers","logCB","logger","extend","rest","Questions","withStyles","withTheme","props","get","themeColors","StylesManager","ThemeColors","primary","main","secondary","divider","background","paper","light","applyTheme","Model","questions","surveyModel","pageNum","currentPageNo","reaction","SurveyModel","updatePages","setData","survey","setPages","pages","visiblePages","page","hasErrors","onCurrentPageChanged","setPage","onUpdateQuestionCssClasses","_survey","cssClasses","preview","classNames","onPageVisibleChanged","onPageAdded","onUploadFiles","a","files","callback","file","upload","res","url","onValueChanging","oldValue","onValueChanged","setTimeout","onMatrixRowAdded","rowIndex","onMatrixRowRemoved","onDynamicPanelItemValueChanged","itemIndex","itemValue","onMatrixCellValueChanged","columnName","row","onValidateQuestion","completedHtml","ReactDOMServer","renderToString","ThemeProvider","onQuestionAdded","options","onAfterRenderQuestion","htmlElement","autofill","seq","answer","cerebralbutton","sequences","ReactDOM","Button","onClick","Component","deps","init","connect","PagesDrawer","contents","Toolbar","Typography","variant","color","align","className","noWrap","Divider","List","ListItem","key","button","selected","setSurveyPage","ListItemIcon","ListItemText","secondaryTypographyProps","readme","component","Link","target","href","Hidden","permScreens","implementation","SwipeableDrawer","open","navigationOpen","onOpen","showNavigation","onClose","hideNavigation","tempScreens","Drawer","ConfirmSubmitDialog","handleClose","confirm","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","resultsUrl","DialogActions","autoFocus","setState","submitResults","disconnect","aria-owns","aria-haspopup","process","REACT_APP_GIT","MenuItem","close","Snackbar","anchorOrigin","vertical","horizontal","SnackbarContent","message","action","IconButton","aria-label","join","describe","version","semverString","meta","queryString","parse","search","responsiveFontSizes","createMuiTheme","type","gold","App","smUp","xsDown","AppBar","position","canSubmit","submit","data-theme","data-scope","scope","initialized","loggedin","isSinglePage","singlePage","Box","p","CircularProgress","size","onComplete","MobileStepper","steps","activeStep","mobileStepper","nextButton","canNext","goNextPage","backButton","canPrev","goPreviousPage","droneQRScannerActive","sensorQRScannerActive","showDroneQRScanner","showSensorQRScanner","hideDroneQRScanner","hideSensorQRScanner","login","logout","google","createSheet","Fragment","CssBaseline","gapi","localstore","paths","providers","ls","set","clear","remove","persistState","when","moduleState","true","success","false","parallel","path","merge","reactions","Reaction","modulePath","sequence","reduce","obj","Object","assign","GetLocationError","CerebralError","GAPIError","err","result","SerializeError","r","c","DeserializeError","geolocation","getCurrentLoc","Promise","resolve","reject","getCurrentPosition","pos","coords","code","msg","errors","setAnswer","num","nextPage","previousPage","prevPage","completeLastPage","gapiClient","Bluebird","googleapi","tap","load","onerror","timeout","ontimeout","client","discoveryDocs","auth","auth2","getAuthInstance","listener","signedIn","user","currentUser","getBasicProfile","context","getName","isSignedIn","listen","_scope","hasGrantedScopes","grant","appdataScope","googleappdata","getData","drive","list","spaces","q","fields","appProperties","initData","body","create","resource","mimeType","parents","updateData","update","fileId","sheetsScope","semver","sheetVer","major","minor","googlesheets","sheets","ver","getVersion","spreadsheets","getSheet","values","spreadsheetId","range","sheet","XLSX","utils","aoa_to_sheet","sheet_to_json","writeSheet","sheetsURL","json_to_sheet","header","valueInputOption","includeValuesInResponse","majorDimension","addRow","insertDataOption","googledrive","token","getToken","fetch","method","headers","Headers","fileResult","ducky","validate","compile","serialize","i","serialized","keys","execute","JSON","stringify","deserialize","deserialized","startsWith","kkey","substring","openweather","axios","baseURL","interceptors","request","use","units","appid","weather","current","query","getCurrentLocation","currentLoc","latitude","longitude","results","resultsId","found","notfound","lat","lon","setSurveyData","actions","completeSurvey","done","setCurrentLocation","locations","concat","createSheetWithAppData","loadappdata","uploadScreenshot","store","forIn","findKeys","filter","test","vauleName","previous","ans","includes","v","k","o","disconnectGoogle","confirmSubmit","reload","setDebugMenuOpen","getCurrentLocationWeather","d","equals","person","temperature","windspeed","winddirection","lastused","otherwise","displayError","clearError","unset","Compute","pastAnswers","forin","Array","isArray","addAnswer","isequal","unshift","elements","isRequired","inputType","defaultValue","DateTime","local","toFormat","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","visibleIf","rowCount","addRowText","removeRowText","columns","cellType","hasOther","storeDataAsText","acceptedTypes","allowMultiple","previousAsChoices","hideIfChoicesEmpty","storeOthersAsComment","valueName","chem","toLowerCase","requiredIf","otherText","otherErrorText","make","description","validators","regex","html","_module","computeds","appdataId","submitting","confirmSubmitOpen","surveyData","pastData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","Error","modules","app","devtools","throwToConsole","noRethrow","returnSequencePromise","getSequence","document","getElementById","URL","origin","addEventListener","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.340e9cfa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","// MUI styles for all the things\n// TODO: Is this a good way to do this stuff??\n\nimport { createStyles, Theme } from '@material-ui/core';\nimport { WithStyles } from '@material-ui/styles';\n\nconst drawerWidth = 240;\n\nexport const styles = (theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        content: {\n            textAlign: 'center',\n            flexGrow: 1,\n            alignSelf: 'center',\n            maxWidth: 800,\n        },\n        appBar: {\n            top: 0,\n            bottom: 'auto',\n            marginLeft: drawerWidth,\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n            },\n        },\n        toolbar: theme.mixins.toolbar,\n        bottomBar: {\n            bottom: 0,\n            top: 'auto',\n            marginLeft: drawerWidth,\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n            },\n        },\n        grow: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginLeft: -12,\n            marginRight: 20,\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        icon: {\n            fontSize: 20,\n        },\n        iconVariant: {\n            opacity: 0.9,\n            marginRight: theme.spacing(1),\n        },\n        error: {\n            backgroundColor: theme.palette.error.dark,\n        },\n        ssPreview: {\n            width: '95%',\n        },\n    });\n\nexport type Styles = WithStyles<typeof styles>;\n\nexport default styles;\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\n// Want a singleton of survey model\nimport type { SurveyModel } from 'survey-react';\n\nexport default {\n    model: null,\n} as { model: SurveyModel | null };\n","import * as Survey from 'survey-react';\n\nrequire('jquery-ui/themes/base/core.css');\nrequire('jquery-ui/themes/base/menu.css');\nrequire('jquery-ui/themes/base/autocomplete.css');\nrequire('jquery-ui/themes/base/theme.css');\n\nlet $ = require('jquery');\nrequire('jquery-ui/ui/widgets/autocomplete');\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'autocomplete',\n    default: false,\n});\nSurvey.JsonObject.metaData.addProperty('text', 'choices:itemvalues');\n/* TODO: What is this??\nSurvey.JsonObject.metaData.addProperty('text', {\n    name: 'choicesByUrl:restfull',\n    className: 'ChoicesRestfull',\n    onGetValue(obj) {\n        return obj && obj.choicesByUrl && obj.choicesByUrl.getData();\n    },\n    onSetValue(obj, value) {\n        if (!obj.choicesByUrl) {\n            obj.choicesByUrl = new Survey.ChoicesRestfull();\n        }\n        obj.choicesByUrl.setData(value);\n    },\n});\n*/\n\nexport const autocompleteWidget = {\n    name: 'autocomplete',\n\n    widgetIsLoaded() {\n        return !!$.ui.autocomplete;\n    },\n\n    // Doesn't let you type unles this is here...\n    render(question) {},\n\n    isDefaultRender: true,\n\n    isFit(question) {\n        return !!question.autocomplete;\n    },\n\n    activatedByChanged(activatedBy) {\n        if (Survey.JsonObject.metaData.findProperty('text', 'autofill')) {\n            return;\n        }\n    },\n\n    afterRender(question, el) {\n        let $el = $(el).is('input') ? $(el) : $(el).find('input');\n\n        $el.autocomplete({\n            appendTo: $('.sv_main'),\n            classes: {\n                'ui-autocomplete': 'sv_q_text_root',\n            },\n            source: (question.choices || []).map((it) => it.text),\n        });\n    },\n\n    willUnMount(question, el) {\n        let $el = $(el).is('input') ? $(el) : $(el).find('input');\n\n        $el.autocomplete('destroy');\n    },\n};\n\nexport default autocompleteWidget;\n","import debug from 'debug';\n\nimport * as Survey from 'survey-react';\n\nimport $ from 'jquery';\nimport 'select2';\nimport 'select2/dist/css/select2.min.css';\n\nimport './select2.scss';\n\nlet info = debug('contxt:tagbox');\n\nexport const tagboxWidget = {\n    name: 'tagbox',\n    title: 'Tag box',\n    iconName: 'icon-tagbox',\n    widgetIsLoaded: function () {\n        return typeof $ == 'function' && !!$.fn.select2;\n    },\n    defaultJSON: {\n        choices: ['Item 1', 'Item 2', 'Item 3'],\n    },\n    htmlTemplate: '<select multiple=\"multiple\" style=\"width: 100%;\"></select>',\n    isFit: function (question) {\n        return question.getType() === 'tagbox';\n    },\n    activatedByChanged: function (activatedBy) {\n        Survey.JsonObject.metaData.addClass(\n            'tagbox',\n            [\n                {\n                    name: 'hasOther',\n                    visible: false,\n                },\n            ],\n            null,\n            'checkbox'\n        );\n        Survey.JsonObject.metaData.addProperty('tagbox', {\n            name: 'select2Config',\n            default: null,\n        });\n        Survey.JsonObject.metaData.addProperty('tagbox', {\n            name: 'placeHolder',\n            default: null,\n        });\n        Survey.matrixDropdownColumnTypes.tagbox = {\n            properties: [\n                'choices',\n                'choicesOrder',\n                'choicesByUrl',\n                'optionsCaption',\n                'otherText',\n                'choicesVisibleIf',\n            ],\n        };\n    },\n    fixStyles: function (el) {\n        let e = el.parentElement.querySelector('.select2-search__field');\n        if (e) {\n            e.style.border = 'none';\n        }\n    },\n    afterRender: function (question, el) {\n        var self = this;\n        var settings = {\n            tags: true,\n            disabled: question.isReadOnly,\n            placeholder: question.placeHolder,\n            theme: 'material',\n            tokenSeparators: [','],\n            ...question.select2Config,\n        };\n        var $el = $(el).is('select') ? $(el) : $(el).find('select');\n        $el.select2(settings);\n\n        self.fixStyles(el);\n\n        var updateValueHandler = function () {\n            (question.value || []).forEach((it) => {\n                if ($el.find(`option[value=\"${it}\"]`).length === 0) {\n                    let option = new Option(it, it, true, true);\n                    $el.append(option).trigger('change');\n                }\n            });\n            $el.val(question.value).trigger('change');\n            self.fixStyles(el);\n        };\n        var updateChoices = function () {\n            $el.select2().empty();\n\n            if (settings.ajax) {\n                $el.select2(settings);\n            } else {\n                settings.data = question.visibleChoices.map(function (choice) {\n                    return {\n                        id: choice.value,\n                        text: choice.text,\n                    };\n                });\n                $el.select2(settings);\n            }\n\n            updateValueHandler();\n        };\n\n        question.readOnlyChangedCallback = function () {\n            $el.prop('disabled', question.isReadOnly);\n        };\n        question.registerFunctionOnPropertyValueChanged(\n            'visibleChoices',\n            function () {\n                updateChoices();\n            }\n        );\n        question.valueChangedCallback = updateValueHandler;\n        let setValue = function (e) {\n            info('setValue %o', e);\n\n            let val = $el.select2('data').map((it) => it.id);\n            val.forEach((val) => {\n                // Add choice if it does not exist\n                if (!question.choices.some((choice) => choice.value === val)) {\n                    let choice = new Survey.ItemValue(e.params.data.id);\n                    question.choices.push(choice);\n                }\n            });\n\n            question.value = val;\n        };\n        $el.on('select2:select', setValue);\n        $el.on('select2:unselect', setValue);\n        updateChoices();\n    },\n    willUnmount: function (question, el) {\n        $(el).find('select').off('select2:select').select2('destroy');\n        question.readOnlyChangedCallback = null;\n    },\n};\n\nexport default tagboxWidget;\n","import isEmpty from 'lodash.isempty';\n\n// Function to decide if value constitutes an answered question\nexport default function unanswered(value) {\n    if (typeof value === 'object') {\n        return isEmpty(value) || (value.every && value.every(isEmpty));\n    } else {\n        return value === undefined || value === '';\n    }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\n// TODO: Handle this without having mui stuff in this class??\nimport { ThemeProvider, WithTheme } from '@material-ui/styles';\n\nimport { connect, ConnectedProps } from '@cerebral/react';\nimport { state, sequences } from 'cerebral';\n\nimport Button from '@material-ui/core/Button';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\n\nimport debug, { Debugger } from 'debug';\n\nimport {\n    Survey,\n    Model,\n    Question,\n    SurveyModel,\n    StylesManager,\n    CustomWidgetCollection,\n    JsonObject,\n} from 'survey-react';\nimport 'survey-react/survey.css';\n\nimport classNames from 'classnames';\n//import Pica from 'pica';\n\nimport { styles, Styles } from './styles';\nimport { theme } from './App';\n\nimport surveyModel from './surveyModel';\n\nimport acwidget from './autocompleteWidget';\nimport tbwidget from './tagboxWidget';\n\nimport unanswered from './unanswered';\n\nCustomWidgetCollection.Instance.addCustomWidget(acwidget, 'property');\nCustomWidgetCollection.Instance.addCustomWidget(tbwidget, 'customtype');\n\nJsonObject.metaData.addProperty('question', {\n    name: 'cerebralbutton',\n});\n\nJsonObject.metaData.addProperty('question', {\n    name: 'autofill',\n    default: false,\n});\n\n// Override imageWidth for file questions\nJsonObject.metaData.addProperty('file', {\n    name: 'imageWidth',\n    default: '100%',\n});\n\n//let pica = new Pica();\n\nconst info = debug('contxt:survey');\ninfo.log = console.info.bind(console);\n\nlet loggers: Record<string, Debugger> = {};\nfunction logCB(name: string, ...rest: Parameters<Debugger>) {\n    let logger = loggers[name] || info.extend(name);\n    loggers[name] = logger;\n\n    return logger(...rest);\n}\n\ninterface Props extends ExternalProps, Deps, ConnectedProps, Styles {}\nexport const Questions = withStyles(styles)(\n    withTheme(\n        class extends Component<Props & Styles & WithTheme<typeof theme>> {\n            private model?: SurveyModel;\n\n            componentWillMount() {\n                const { get, theme } = this.props;\n\n                // Apply MUI theme to survey\n                const { palette } = theme;\n                let themeColors = StylesManager.ThemeColors['default'];\n                themeColors['$main-color'] = palette.primary.main;\n                themeColors['$main-hover-color'] = palette.primary.dark;\n                themeColors['$text-color'] = palette.text.primary;\n                themeColors['$header-color'] = palette.secondary.main;\n                themeColors['$border-color'] = palette.divider;\n                themeColors['$header-background-color'] =\n                    palette.secondary.main;\n                themeColors['$body-background-color'] =\n                    palette.background.paper;\n                themeColors['$body-container-background-color'] =\n                    palette.background.paper;\n                themeColors['$inputs-background-color'] =\n                    palette.background.default;\n                themeColors['$error-color'] = palette.error.main;\n                themeColors['$error-background-color'] = palette.error.light;\n                StylesManager.applyTheme('default');\n\n                this.model = new Model(this.props.questions);\n                surveyModel.model = this.model;\n\n                // TODO: I'm sure this is isn't right with cerebral..\n                let data = get(state`surveyData`);\n                if (data) {\n                    this.model.data = data;\n                }\n                let pageNum = get(state`pageNum`);\n                if (pageNum !== undefined) {\n                    this.model.currentPageNo = pageNum;\n                }\n\n                this.props.reaction(\n                    'changePage',\n                    {\n                        pageNum: state`pageNum`,\n                    },\n                    ({ pageNum }) => (this.model!.currentPageNo = pageNum)\n                );\n                this.props.reaction(\n                    'changeData',\n                    {\n                        data: state`surveyData`,\n                    },\n                    ({ data }) => (this.model!.data = data)\n                );\n                this.props.reaction(\n                    'changeQuestions',\n                    {\n                        questions: state`questions`,\n                    },\n                    ({ questions }) => {\n                        this.model = new SurveyModel(questions);\n                        surveyModel.model = this.model;\n                    }\n                );\n\n                this.updatePages(this.model);\n                this.props.setData({ data: this.model.data });\n            }\n\n            updatePages(survey: SurveyModel) {\n                this.props.setPages({\n                    pages: survey.visiblePages.map((page) => ({\n                        error: page.hasErrors(false, false),\n                        name: page.name,\n                        title: page.title,\n                    })),\n                });\n            }\n\n            render() {\n                const { get, theme, classes, ...props } = this.props;\n\n                return (\n                    <Survey\n                        {...props}\n                        model={this.model}\n                        onCurrentPageChanged={(survey: SurveyModel) => {\n                            logCB(\n                                'onCurrentPageChanged',\n                                `${survey.currentPageNo}`\n                            );\n\n                            if (get(state`pageNum`) !== survey.currentPageNo) {\n                                props.setPage({\n                                    pageNum: survey.currentPageNo,\n                                });\n                            }\n                        }}\n                        onUpdateQuestionCssClasses={(\n                            _survey: SurveyModel,\n                            { question, cssClasses }: any\n                        ) => {\n                            logCB(\n                                'onUpdateQuestionCssClasses',\n                                `${question.name}=%o`,\n                                cssClasses\n                            );\n\n                            // TODO: Support more CSS stuff?\n                            cssClasses.preview = classNames(\n                                cssClasses.preview,\n                                classes.ssPreview\n                            );\n                        }}\n                        onPageVisibleChanged={this.updatePages.bind(this)}\n                        onPageAdded={this.updatePages.bind(this)}\n                        onUploadFiles={async (\n                            _survey: SurveyModel,\n                            {\n                                files,\n                                callback,\n                            }: { files: File[]; callback: Function }\n                        ) => {\n                            logCB('onUploadFiles', `%o`, files);\n\n                            // TODO: Support multiple files?\n                            let file = files[0];\n\n                            let res = await props.upload({ file });\n\n                            callback('success', [\n                                {\n                                    file,\n                                    content: res.url,\n                                },\n                            ]);\n                        }}\n                        onValueChanging={(\n                            _survey: SurveyModel,\n                            {\n                                // @ts-ignore\n                                question,\n                                name,\n                                oldValue,\n                                value,\n                            }: {\n                                question: string;\n                                name: string;\n                                oldValue: unknown;\n                                value: unknown;\n                            }\n                        ) => {\n                            logCB(\n                                'onValueChanging',\n                                `%o ${name}=%o`,\n                                oldValue,\n                                value\n                            );\n\n                            return;\n                            /*\n                    if (question instanceof QuestionFileModel) {\n                        (value || []).forEach((file, i) => {\n                            if (!(file && file.content) || file.converted) {\n                                return;\n                            }\n\n                            let img = new Image();\n                            img.src = file.content;\n                            let canvas = document.createElement('canvas');\n                            // TODO: Too small, need to upload to photos etc...\n                            canvas.width = 150;\n                            // Maintain aspect ratio\n                            canvas.height =\n                                (img.height * canvas.width) / img.width;\n\n                            const options = {\n                                unsharpAmount: 80,\n                                unsharpRadius: 0.6,\n                                unsharpThreshold: 2,\n                            };\n                            pica.resize(img, canvas, options).then(() => {\n                                let resized = {\n                                    name: file.name,\n                                    content: canvas.toDataURL(),\n                                    type: 'image/png',\n                                    converted: true,\n                                };\n\n                                // You have to reassign question.value\n                                // Stuff breaks if you assign question.value[i]\n                                let value = question.value;\n                                question.value = [];\n                                value[i] = resized;\n                                question.value = value;\n                            });\n                        });\n                    }\n                    */\n                        }}\n                        onValueChanged={(\n                            survey: SurveyModel,\n                            {\n                                name,\n                                value,\n                                question,\n                            }: {\n                                name: string;\n                                value: unknown;\n                                question: Question;\n                            }\n                        ) => {\n                            logCB('onValueChanged', `%o=%o`, question, value);\n\n                            props.setData({ data: survey.data, name, value });\n                            // No idea why, but cerebral freaks out if I call this\n                            // without the setTimeout...\n                            setTimeout(() => this.updatePages(survey));\n                        }}\n                        onMatrixRowAdded={(\n                            survey: SurveyModel,\n                            {\n                                question,\n                                rowIndex,\n                            }: { question: Question; rowIndex: number }\n                        ) => {\n                            logCB(\n                                'onMatrixRowAdded',\n                                '%d %o',\n                                rowIndex,\n                                question\n                            );\n                            setTimeout(() => this.updatePages(survey));\n                        }}\n                        onMatrixRowRemoved={(\n                            survey: SurveyModel,\n                            {\n                                question,\n                                rowIndex,\n                            }: { question: Question; rowIndex: number }\n                        ) => {\n                            logCB(\n                                'onMatrixRowRemoved',\n                                '%d %o',\n                                rowIndex,\n                                question\n                            );\n                            setTimeout(() => this.updatePages(survey));\n                        }}\n                        onDynamicPanelItemValueChanged={(\n                            _survey: SurveyModel,\n                            {\n                                question,\n                                value,\n                                itemIndex,\n                                itemValue,\n                            }: { [k: string]: unknown }\n                        ) => {\n                            logCB(\n                                'onDynamicPanelItemValueChanged',\n                                `%o=%o %o=%o`,\n                                question,\n                                value,\n                                itemIndex,\n                                itemValue\n                            );\n                        }}\n                        onMatrixCellValueChanged={(\n                            _survey: SurveyModel,\n                            {\n                                question,\n                                value,\n                                columnName,\n                                row,\n                            }: { [k: string]: unknown }\n                        ) => {\n                            logCB(\n                                'onMatrixCellValueChanged',\n                                `%o=%o %s %s`,\n                                question,\n                                value,\n                                columnName,\n                                row\n                            );\n                        }}\n                        onValidateQuestion={(\n                            _survey: SurveyModel,\n                            {\n                                question,\n                                name,\n                                value,\n                                error,\n                            }: { [k: string]: unknown }\n                        ) => {\n                            logCB(\n                                'onValidateQuestion',\n                                '%o %s %s %s',\n                                question,\n                                name,\n                                value,\n                                error\n                            );\n                        }}\n                        completedHtml={ReactDOMServer.renderToString(\n                            <ThemeProvider theme={theme}>\n                                {props.completedHtml}\n                            </ThemeProvider>\n                        )}\n                        onQuestionAdded={(\n                            _survey: SurveyModel,\n                            options: unknown\n                        ) => {\n                            logCB('onQuestionAdded', '%o', options);\n                        }}\n                        onAfterRenderQuestion={async (\n                            _survey: SurveyModel,\n                            {\n                                question,\n                                htmlElement,\n                            }: { question: Question; htmlElement: Element }\n                        ) => {\n                            logCB('onAfterRenderQuestion', '%o', question);\n\n                            /*\n                        if (question.autocomplete) {\n                            question.choices = [\n                                new Survey.ItemValue('foo'),\n                                new Survey.ItemValue('bar'),\n                            ];\n                        }*/\n\n                            let { autofill } = question;\n                            // Try to autofill if unanswered\n                            if (unanswered(question.value) && autofill) {\n                                if (typeof autofill === 'function') {\n                                    question.value = await autofill(question);\n                                } else {\n                                    let seq = await props.autofill({\n                                        // TODO: How to handle dynamic questions?\n                                        question: question.name,\n                                        autofill,\n                                    });\n                                    question.value = seq && seq.answer;\n                                }\n                            }\n\n                            if (question.cerebralbutton) {\n                                let seq = get(\n                                    sequences`${question.cerebralbutton}`\n                                );\n                                ReactDOM.render(\n                                    <ThemeProvider theme={theme}>\n                                        <Button onClick={() => seq()}>\n                                            {question.title}\n                                        </Button>\n                                    </ThemeProvider>,\n                                    htmlElement\n                                );\n                            }\n                        }}\n                    />\n                );\n            }\n        }\n    )\n);\n\nconst deps = {\n    questions: state`questions`,\n    init: sequences`initSurvey`,\n    data: state`surveyData`,\n    setData: sequences`setSurveyData`,\n    setPage: sequences`setSurveyPage`,\n    currentPageNo: state`pageNum`,\n    setPages: sequences`setPages`,\n    autofill: sequences`autofill`,\n    upload: sequences`uploadScreenshot`,\n};\ntype Deps = typeof deps;\ntype ExternalProps = {\n    isSinglePage: boolean;\n    completedHtml: React.ReactComponentElement<any>;\n    onComplete: (survey: SurveyModel) => void;\n};\nexport default connect<ExternalProps, Deps>(deps, Questions);\n","import React from 'react';\nimport { connect, ConnectedProps } from '@cerebral/react';\nimport { state, sequences } from 'cerebral';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { withStyles } from '@material-ui/styles';\n\nimport { styles, Styles } from './styles';\n\ninterface Props extends ExternalProps, Deps, ConnectedProps, Styles {}\nexport const PagesDrawer = withStyles(styles)((props: Props) => {\n    const { classes } = props;\n\n    const contents = (\n        <div>\n            <Toolbar>\n                <Typography\n                    variant=\"h6\"\n                    color=\"primary\"\n                    align=\"center\"\n                    className={classes.grow}\n                    noWrap\n                >\n                    Pages\n                </Typography>\n            </Toolbar>\n            <Divider />\n            <List>\n                {\n                    // @ts-ignore\n                    props.pages.map(({ name, title, error }, pageNum) => (\n                        <ListItem\n                            key={name}\n                            button\n                            selected={pageNum === props.pageNum}\n                            className={error ? 'page-err' : 'page-complete'}\n                            onClick={() => props.setSurveyPage({ pageNum })}\n                        >\n                            <ListItemIcon>\n                                {error ? (\n                                    <WarningIcon color=\"error\" />\n                                ) : (\n                                    <DoneIcon />\n                                )}\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={title}\n                                secondary={error ? 'Incomplete' : 'Complete'}\n                                secondaryTypographyProps={{\n                                    color: error ? 'error' : 'textSecondary',\n                                }}\n                            />\n                        </ListItem>\n                    ))\n                }\n                {props.readme && (\n                    <>\n                        <Divider />\n                        <ListItem\n                            component={Link}\n                            target=\"_blank\"\n                            href={props.readme}\n                        >\n                            <ListItemText primary=\"Readme\" />\n                        </ListItem>\n                    </>\n                )}\n            </List>\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer}>\n            <Hidden {...props.permScreens} implementation=\"js\">\n                <SwipeableDrawer\n                    open={props.navigationOpen}\n                    onOpen={() => props.showNavigation()}\n                    onClose={() => props.hideNavigation()}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden {...props.tempScreens} implementation=\"js\">\n                <Drawer\n                    variant=\"permanent\"\n                    open\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n});\n\nconst deps = {\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n};\ntype Deps = typeof deps;\ntype ExternalProps = {\n    readme: string;\n    permScreens: any;\n    tempScreens: any;\n};\nexport default connect<ExternalProps, Deps>(deps, PagesDrawer);\n","import React from 'react';\nimport { connect, ConnectedProps } from '@cerebral/react';\nimport { state, sequences } from 'cerebral';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\n\nimport { styles } from './styles';\nimport { withStyles } from '@material-ui/styles';\n\nexport const ConfirmSubmitDialog = withStyles(styles)(\n    (props: typeof deps & ConnectedProps) => {\n        const handleClose = props.confirm;\n        return (\n            <Dialog\n                open={props.open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    Successfully submitted metadata\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {'Your metadata have been uploaded '}\n                        <Link target=\"_blank\" href={props.resultsUrl}>\n                            here.\n                        </Link>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n);\n\nconst deps = {\n    open: state`confirmSubmitOpen`,\n    resultsUrl: state`resultsUrl`,\n    confirm: sequences`confirmSubmit`,\n};\nexport default connect(deps, ConfirmSubmitDialog);\n","import React from 'react';\nimport { connect } from '@cerebral/react';\nimport { state, sequences } from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction DebugButton(props) {\n    let button = (\n        <Button\n            aria-owns=\"debug-menu\"\n            aria-haspopup=\"true\"\n            onClick={() => props.setState({ open: true })}\n            color=\"inherit\"\n        >\n            {process.env.REACT_APP_GIT}\n        </Button>\n    );\n    return (\n        <div>\n            {button}\n            <Menu\n                id=\"debug-menu\"\n                //anchorEl={button}\n                open={props.open || false}\n                onClose={() => props.setState({ open: false })}\n            >\n                <MenuItem onClick={() => props.submitResults()}>\n                    Force Submit\n                </MenuItem>\n                <MenuItem onClick={() => props.disconnect()}>\n                    Disconnect Google\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\nexport default connect(\n    {\n        open: state`debugMenuOpen`,\n        setState: sequences`setDebugMenuOpen`,\n        submitResults: sequences`submitResults`,\n        disconnect: sequences`disconnectGoogle`,\n    },\n    DebugButton\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { connect } from '@cerebral/react';\nimport { state, sequences } from 'cerebral/tags';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction ErrorDisplay({ classes = {}, error, close }) {\n    return (\n        <Snackbar\n            open={!!error}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <SnackbarContent\n                className={classes.error}\n                aria-describedby=\"client-snackbar\"\n                message={\n                    <span id=\"client-snackbar\" className={classes.root}>\n                        <ErrorIcon\n                            className={classNames(\n                                classes.iconVariant,\n                                classes.icon\n                            )}\n                        />\n                        {error && error.name + ': ' + error.message}\n                    </span>\n                }\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        onClick={close}\n                    >\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>,\n                ]}\n            />\n        </Snackbar>\n    );\n}\n\nexport default connect(\n    {\n        error: state`error`,\n        close: sequences`clearError`,\n    },\n    ErrorDisplay\n);\n","export default [\n    'https://www.googleapis.com/auth/drive.appdata',\n    'https://www.googleapis.com/auth/drive.file',\n].join(' ');\n","/* eslint import/no-webpack-loader-syntax: off */\nimport describe from 'aot-loader!./describe-loader';\n\nexport default describe;\n","export default {\"dirty\":false,\"raw\":\"v0.5.2-12-gd92142b\",\"hash\":\"gd92142b\",\"distance\":12,\"tag\":\"v0.5.2\",\"semver\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"v0.5.2\",\"major\":0,\"minor\":5,\"patch\":2,\"prerelease\":[],\"build\":[],\"version\":\"0.5.2\"},\"suffix\":\"12-gd92142b\",\"semverString\":\"0.5.2+12.gd92142b\"}","import React, { Component } from 'react';\nimport { connect, ConnectedProps } from '@cerebral/react';\nimport { state, sequences } from 'cerebral';\n\nimport { withStyles } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport gold from '@material-ui/core/colors/amber';\n\n// Has to be last mui import\nimport Box from '@material-ui/core/Box';\n\nimport DocumentMeta from 'react-document-meta';\n// @ts-ignore\nimport HttpsRedirect from 'react-https-redirect';\nimport queryString from 'query-string';\n\nimport './App.css';\n//import QRDialog from './QRDialog';\nimport Questions from './Questions';\nimport PagesDrawer from './PagesDrawer';\nimport ConfirmSubmitDialog from './ConfirmSubmitDialog';\nimport DebugButton from './DebugButton';\nimport ErrorDisplay from './ErrorDisplay';\n\nimport { styles, Styles } from './styles';\nimport scope from './googleScopes';\nimport describe from './describe';\n\nimport { State } from './main/types';\n\nconst version = describe.semverString;\nconst meta = {\n    title: `${process.env.REACT_APP_NAME} ${version}`,\n    meta: {\n        'ui-version': version,\n    },\n};\n\n// Parse query string\nconst params = queryString.parse(window.location.search);\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nexport const theme = responsiveFontSizes(\n    createMuiTheme({\n        palette: {\n            // Default to dark theme\n            type: params.theme === 'light' ? 'light' : 'dark',\n            primary: gold,\n        },\n    })\n);\n\nconst README_URL =\n    'https://docs.google.com/document/d/' +\n    '1wkG-bEYFyqxV-SmYoQmgLTJ1m1pvPvXlnTTnjh60ZFY/edit?usp=sharing';\n\n/**\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    //deferredPrompt = e;\n    if (params.install !== undefined) {\n        e.prompt(); // TODO: Don't show prompt immediately?\n    }\n});\n*/\n\ninterface AppProps extends Deps, ConnectedProps, Styles {}\n\nconst App = withStyles(styles)(\n    class App extends Component<AppProps> {\n        componentWillMount() {\n            this.props.init();\n        }\n\n        render() {\n            const { props } = this;\n            const { classes } = props;\n\n            return (\n                <div className={classes.root}>\n                    <PagesDrawer\n                        // Screens sizes to show permanent drawer\n                        permScreens={{ smUp: true }}\n                        // Screens sizes to show temporary drawer\n                        tempScreens={{ xsDown: true }}\n                        readme={README_URL}\n                    />\n                    <AppBar position=\"fixed\" className={classes.appBar}>\n                        <Toolbar>\n                            {params.debug !== undefined && (\n                                // Super secret debug button\n                                <DebugButton />\n                            )}\n                            <IconButton\n                                className={classes.menuButton}\n                                color=\"inherit\"\n                                onClick={() => props.showNavigation()}\n                                aria-label=\"Pages\"\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            <Button\n                                color=\"inherit\"\n                                disabled={!props.canSubmit}\n                                onClick={() => props.submit()}\n                            >\n                                Submit\n                                <SendIcon />\n                            </Button>\n                            <div className={classes.grow} />\n                            <div\n                                className=\"g-signin2\"\n                                data-theme=\"dark\"\n                                data-scope={scope}\n                            />\n                        </Toolbar>\n                    </AppBar>\n                    {/*}\n                    <QRDialog\n                        open={props.droneQRScannerActive}\n                        onClose={props.hideDroneQRScanner}\n                    />\n                    <QRDialog\n                        open={props.sensorQRScannerActive}\n                        onClose={props.hideSensorQRScanner}\n                    />\n                    {*/}\n                    <ConfirmSubmitDialog />\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        {props.initialized &&\n                            (props.loggedin ? (\n                                <Questions\n                                    isSinglePage={\n                                        params.singlePage !== undefined\n                                    }\n                                    completedHtml={\n                                        <div>\n                                            <Typography color=\"inherit\">\n                                                Submitting Metadata\n                                            </Typography>\n                                            <Box p={4}>\n                                                <CircularProgress size={100} />\n                                            </Box>\n                                        </div>\n                                    }\n                                    onComplete={() => props.submitResults()}\n                                />\n                            ) : (\n                                <Box p={4}>\n                                    <Typography color=\"inherit\">\n                                        Please sign in to continue.\n                                    </Typography>\n                                </Box>\n                            ))}\n                        <div className={classes.toolbar} />\n                    </main>\n                    <ErrorDisplay />\n                    <AppBar position=\"fixed\" className={classes.bottomBar}>\n                        <MobileStepper\n                            steps={props.pages.length}\n                            position=\"static\"\n                            activeStep={props.pageNum}\n                            // @ts-ignore\n                            className={classes.mobileStepper}\n                            nextButton={\n                                props.pageNum === props.pages.length - 1 ? (\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={!props.canSubmit}\n                                        onClick={() => props.submit()}\n                                    >\n                                        Sumbit\n                                        <SendIcon />\n                                    </Button>\n                                ) : (\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={!props.canNext}\n                                        onClick={() => props.goNextPage()}\n                                    >\n                                        Next\n                                        <NavigateNextIcon />\n                                    </Button>\n                                )\n                            }\n                            backButton={\n                                <Button\n                                    color=\"primary\"\n                                    disabled={!props.canPrev}\n                                    onClick={() => props.goPreviousPage()}\n                                >\n                                    <NavigateBeforeIcon />\n                                    Previous\n                                </Button>\n                            }\n                        />\n                    </AppBar>\n                </div>\n            );\n        }\n    }\n);\n\nconst deps = {\n    initialized: state`initialized` as State['initialized'],\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n    loggedin: state`loggedin`,\n    login: sequences`login`,\n    logout: sequences`logout`,\n    google: state`google`,\n    createSheet: sequences`createSheet`,\n    submitResults: sequences`submitResults`,\n    canSubmit: state`canSubmit`,\n    canNext: state`canNext`,\n    canPrev: state`canPrev`,\n};\ntype Deps = typeof deps;\n\nexport const AppContainer: React.FunctionComponent<\n    typeof deps & ConnectedProps\n> = (props) => {\n    return (\n        <HttpsRedirect>\n            <ThemeProvider theme={theme}>\n                <DocumentMeta {...meta} />\n                <React.Fragment>\n                    <CssBaseline />\n                    <App {...props} />\n                </React.Fragment>\n            </ThemeProvider>\n        </HttpsRedirect>\n    );\n};\n\nexport default connect(deps, AppContainer);\n","import { Reaction } from 'cerebral';\nimport { state, moduleState, props, sequences } from 'cerebral/tags';\nimport { set, merge, when, parallel } from 'cerebral/factories';\n\nimport ls from 'local-storage';\n\nexport const localstore = (paths) => ({\n    providers: {\n        localstore: {\n            get(key) {\n                return ls.get(key);\n            },\n\n            set(key, val) {\n                return ls.set(key, val);\n            },\n\n            clear(key) {\n                return ls.remove(key);\n            },\n        },\n    },\n\n    state: {\n        initialized: false,\n    },\n\n    sequences: {\n        persistState: [\n            when(moduleState`initialized`), // Wait for init?\n            {\n                true: ({ localstore, props }) => {\n                    let { key, val } = props;\n                    return { success: localstore.set(key, val) };\n                },\n                false: [],\n            },\n        ],\n        clear: [\n            parallel(\n                'clear paths',\n                paths.map((path) => [\n                    ({ localstore }) => ({ val: localstore.clear(path) }),\n                ])\n            ),\n        ],\n        init: [\n            // Load each path from store and set it in state\n            parallel(\n                'get paths',\n                paths.map((path) => [\n                    ({ localstore }) => ({ val: localstore.get(path) }),\n                    when(props`val`, (val) => val === null),\n                    {\n                        true: [], // Ignore null/unset keys\n                        false: [\n                            when(props`val`, (val) => typeof val === 'object'),\n                            {\n                                true: [merge(state`${path}`, props`val`)],\n                                false: [set(state`${path}`, props`val`)],\n                            },\n                        ],\n                    },\n                ])\n            ),\n            set(moduleState`initialized`, true),\n        ],\n    },\n\n    // Generate a reaction for each path in the store\n    reactions: paths\n        .map((path) => {\n            let reaction = Reaction(\n                {\n                    val: state`${path}`,\n                },\n                // TODO: Why didn't using moduleSequences work??\n                //({val, get}) => get(moduleSequences`persistState`)({key: path, val})\n                ({ val, get }) => {\n                    const name = reaction.modulePath.join('.');\n                    const sequence = get(sequences`${name}.persistState`);\n                    return sequence({ key: path, val });\n                }\n            );\n            return { [path]: reaction };\n        })\n        .reduce((obj, reaction) => Object.assign(obj, reaction), {}),\n});\n\nexport default localstore;\n","import Bluebird from 'bluebird';\n//import {state} from 'cerebral';\nimport googleapi, { GAPI } from 'google-client-api';\nimport XLSX from 'xlsx';\nimport axios from 'axios';\nimport ducky, { AST } from 'ducky';\n\nimport * as errors from './errors';\nimport model from '../surveyModel';\nimport scope from '../googleScopes';\n\nimport describe from '../describe';\nimport { Context } from './types';\n\nexport const geolocation = {\n    async getCurrentLoc() {\n        try {\n            return await new Promise<Position>((resolve, reject) =>\n                navigator.geolocation.getCurrentPosition(resolve, reject)\n            ).then((pos) => pos.coords);\n        } catch (err) {\n            let msg;\n\n            switch (err.code) {\n                case 1: // PERMISSION_DENIED\n                    msg = 'Permission denied';\n                    break;\n                case 2: // POSITION_UNAVAILABLE\n                    msg = 'Position unavailable';\n                    break;\n                case 3: // TIMEOUT\n                    msg = 'Timeout obtaining position';\n                    break;\n                default:\n                    msg = 'Unknown error';\n            }\n\n            throw new errors.GetLocationError(msg);\n        }\n    },\n};\n\nexport const survey = {\n    setAnswer(name: string, value: any) {\n        model.model?.setValue(name, value);\n    },\n\n    setPage(num: number) {\n        model.model!.currentPageNo = num;\n    },\n\n    nextPage() {\n        return model.model?.nextPage();\n    },\n\n    previousPage() {\n        return model.model?.prevPage();\n    },\n\n    setData(data: any) {\n        model.model!.data = data;\n    },\n\n    submit() {\n        return model.model?.completeLastPage();\n    },\n};\n\nlet gapi: Bluebird<GAPI>;\nexport const gapiClient = {\n    // Do one-time gapi setup not effected by login/logout\n    async init({\n        login,\n        logout,\n    }: {\n        login: (data: { name: string }) => void;\n        logout: () => void;\n    }) {\n        gapi = Bluebird.resolve(googleapi())\n            // Load client library\n            .tap(\n                ({ load }) =>\n                    new Promise((resolve, reject) =>\n                        load('client', {\n                            callback: resolve,\n                            onerror: reject,\n                            timeout: 10000,\n                            ontimeout: reject,\n                        })\n                    )\n            )\n            // Initialize client (load sheets and drive APIs)\n            .tap(({ client }) =>\n                client.init({\n                    discoveryDocs: [\n                        'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n                        'https://sheets.googleapis.com/$discovery/rest?version=v4',\n                    ],\n                    scope,\n                })\n            )\n            // Listen for login/logout\n            .tap(({ auth2 }) => {\n                let auth = auth2.getAuthInstance();\n                let listener = (signedIn: boolean) => {\n                    if (!signedIn) {\n                        // @ts-ignore\n                        logout && this.context.get(logout)();\n                    } else {\n                        let user = auth.currentUser.get().getBasicProfile();\n                        login &&\n                            // @ts-ignore\n                            this.context.get(login)({\n                                name: user.getName(),\n                            });\n                    }\n                };\n\n                auth.isSignedIn.listen(listener);\n                listener(auth.isSignedIn.get());\n            });\n        await gapi;\n    },\n\n    async get(_scope?: string) {\n        // TODO: Fix/remove code for incremental scopes?\n        return gapi\n            .tap(({ auth2 }) => {\n                let user = auth2.getAuthInstance().currentUser.get();\n\n                // Request needed scopes from user\n                if (!user.hasGrantedScopes(scope)) {\n                    return user.grant({ scope });\n                }\n            })\n            .get('client');\n    },\n\n    async disconnect() {\n        (await gapi).auth2.getAuthInstance().currentUser.get().disconnect();\n    },\n};\nconst appdataScope = [\n    'https://www.googleapis.com/auth/drive.appdata',\n    //'https://www.googleapis.com/auth/drive.file',\n].join(' ');\nexport const googleappdata = {\n    async getData() {\n        // @ts-ignore\n        const { context }: { context: Context } = this;\n        const { drive } = await context.gapiClient.get(appdataScope);\n\n        let files: gapi.client.drive.File[] | undefined;\n        try {\n            ({\n                result: { files },\n            } = await drive.files.list({\n                spaces: 'appDataFolder',\n                q: \"name='config.json'\",\n                fields: 'files(id, appProperties)',\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        let file = files?.[0] ?? {};\n        return {\n            data: file.appProperties,\n            id: file.id,\n        };\n    },\n\n    async initData({ body = {} }) {\n        // @ts-ignore\n        const { context }: { context: Context } = this;\n        let { drive } = await context.gapiClient.get(appdataScope);\n\n        try {\n            let { result } = await drive.files.create({\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    parents: ['appDataFolder'],\n                    appProperties: body,\n                    // @ts-ignore\n                    fields: 'id',\n                },\n            });\n            return result.id;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async updateData({ body = {}, id }: { body: {}; id: string }) {\n        // @ts-ignore\n        const { context }: { context: Context } = this;\n        let { drive } = await context.gapiClient.get(appdataScope);\n\n        try {\n            let { result } = await drive.files.update({\n                fileId: id,\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    appProperties: body,\n                },\n            });\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n};\nconst sheetsScope = 'https://www.googleapis.com/auth/drive.file';\n// Decide sheet version based on semver\nconst { semver } = describe;\nconst sheetVer = semver.major || semver.minor / 10;\nexport const googlesheets = {\n    async createSheet() {\n        // @ts-ignore\n        const { context }: { context: Context } = this;\n        let { sheets } = await context.gapiClient.get(sheetsScope);\n\n        const ver = googlesheets.getVersion();\n        const properties = {\n            title: `${process.env.REACT_APP_NAME} metadata uploads v${ver}`,\n        };\n        try {\n            let { result } = await sheets.spreadsheets.create({\n                // @ts-ignore\n                properties,\n            });\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    getVersion() {\n        return sheetVer;\n    },\n\n    async getSheet(id: string) {\n        // @ts-ignore\n        const { context }: { context: Context } = this;\n        let { sheets } = await context.gapiClient.get(sheetsScope);\n\n        let result;\n        try {\n            ({ result } = await sheets.spreadsheets.values.get({\n                spreadsheetId: id,\n                // @ts-ignore\n                range: ['Sheet1'],\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        if (!result.values) {\n            return [];\n        }\n\n        let sheet = XLSX.utils.aoa_to_sheet(result.values);\n        return XLSX.utils.sheet_to_json(sheet);\n    },\n\n    async writeSheet(id: string, data: unknown[]) {\n        // @ts-ignore\n        const { context }: { context: Context } = this;\n        const sheetsURL = 'https://docs.google.com/spreadsheets';\n        let { sheets } = await context.gapiClient.get(sheetsScope);\n\n        // Format data with spreadsheet lib\n        let sheet = XLSX.utils.json_to_sheet(data);\n        let values = XLSX.utils.sheet_to_json<any[]>(sheet, { header: 1 });\n\n        try {\n            let { result } = await sheets.spreadsheets.values.update(\n                {\n                    spreadsheetId: id,\n                    range: sheet['!ref'] ?? '',\n                    valueInputOption: 'USER_ENTERED', // 'RAW'\n                    includeValuesInResponse: false,\n                },\n                {\n                    majorDimension: 'ROWS',\n                    values,\n                }\n            );\n            let row = data.length + 1;\n            return {\n                ...result,\n                // TODO: How to better handle URL from ID etc.?\n                resultsUrl: `${sheetsURL}/d/${id}#gid=0&range=${row}:${row}`,\n            };\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async addRow(id: string, row: any) {\n        // @ts-ignore\n        const { context }: { context: Context } = this;\n        let { sheets } = await context.gapiClient.get(sheetsScope);\n\n        return sheets.spreadsheets.values.append(\n            // @ts-ignore\n            {\n                spreadsheetId: id,\n                valueInputOption: 'USER_ENTERED', // 'RAW'\n                insertDataOption: 'INSERT_ROWS', // 'OVERWRITE'\n                includeValuesInResponse: false,\n            },\n            {\n                majorDimension: 'ROWS',\n                values: [row],\n            }\n        );\n    },\n};\nconst driveFilesUrl = 'https://www.googleapis.com/upload/drive/v3/files/';\nexport const googledrive = {\n    async upload(file: File) {\n        // @ts-ignore\n        const { context }: { context: Context } = this;\n        let { drive } = await context.gapiClient.get();\n\n        try {\n            let { result } = await drive.files.create({\n                resource: {\n                    name: file.name,\n                    mimeType: file.type,\n                },\n                fields: 'id',\n            });\n\n            // TODO: You really can't sent the body with gapi??? wtf\n            let token = (await context.gapiClient.get()).getToken();\n            await fetch(driveFilesUrl + result.id, {\n                method: 'PATCH',\n                headers: new Headers({\n                    'Authorization': `Bearer ${token['access_token']}`,\n                    'Content-Type': file.type,\n                }),\n                body: file,\n            });\n\n            return `https://docs.google.com/uc?export=download&id=${result.id}`;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n};\n\n// TODO: Better way to handle arrays and such in a spreadsheet?\nconst fileResult = ducky.validate.compile(\n    '[ { content: string, name: string, type: string } ]'\n) as AST<[{ content: string; name: string; type: string }]>;\nexport const serialize = {\n    serialize(data: Record<string, unknown>[]) {\n        return data.map((result, i) => {\n            let serialized: Record<string, any> = {};\n            Object.keys(result).forEach((key) => {\n                try {\n                    const val = result[key];\n                    if (val && typeof val === 'object') {\n                        if (ducky.validate.execute(val, fileResult)) {\n                            /* TODO: Make IMAGE work in google sheets?\n                            serialized[key] =\n                                    `=IMAGE(\"${result[key][0].content}\",3)`;\n                            */\n                            serialized[key] = val[0].content;\n                        } else if (result[key]) {\n                            let kkey = '$$' + key;\n                            serialized[kkey] = JSON.stringify(result[key]);\n                        }\n                    } else {\n                        serialized[key] = val;\n                    }\n                } catch (err) {\n                    throw new errors.SerializeError(i, key, err);\n                }\n            });\n            return serialized;\n        });\n    },\n\n    deserialize(data: Record<string, any>[]) {\n        return data.map((result, i) => {\n            let deserialized: Record<string, unknown> = {};\n            Object.keys(result).forEach((key) => {\n                try {\n                    if (key.startsWith('$$')) {\n                        if (result[key]) {\n                            let kkey = key.substring(2);\n                            deserialized[kkey] = JSON.parse(result[key]);\n                        }\n                    } else {\n                        deserialized[key] = result[key];\n                    }\n                } catch (err) {\n                    // +2 is for header row and 1 vs 0 indexing\n                    throw new errors.DeserializeError(i + 2, key, err);\n                }\n            });\n            return deserialized;\n        });\n    },\n};\n\n/**\n * @see {@link https://openweathermap.org/current#geo}\n */\nconst openweather = axios.create({\n    baseURL: 'https://api.openweathermap.org/data/2.5/',\n    url: '/weather',\n    method: 'get',\n});\nopenweather.interceptors.request.use(({ params, ...rest }) => {\n    // Add default params to config\n    return {\n        params: {\n            // WARNING: The order of these matters to the API...\n            ...params,\n            units: 'imperial', // Use US customary units\n            appid: process.env.REACT_APP_OPENWEATHER_KEY,\n        },\n        ...rest,\n    };\n});\nexport const weather = {\n    async current(query: string | { lat: string; lon: string }) {\n        const { data } = await openweather({ params: query });\n        return data;\n    },\n};\n","import { CerebralError } from 'cerebral';\n\nexport class GetLocationError extends CerebralError {\n    constructor(message) {\n        super(message);\n        this.name = 'GetLocationError';\n    }\n}\n\nexport class GAPIError extends CerebralError {\n    constructor(err) {\n        // gapi doesn't always throw the same sorts of things..\n        let error = err;\n        if (err.result && error.result.error) {\n            error = err.result.error;\n        }\n\n        super(error.message);\n        this.name = 'GAPIError';\n        this.result = error;\n    }\n}\n\nexport class SerializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error serializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n\nexport class DeserializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error deserializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n","import forIn from 'lodash.forin';\n\nimport { state } from 'cerebral';\n\nimport { Context, State } from './types';\nimport { SurveyModel } from 'survey-react';\n\nexport async function getCurrentLocation({ geolocation }: Context) {\n    return geolocation.getCurrentLoc().then(({ latitude, longitude }) => ({\n        currentLoc: { latitude, longitude },\n    }));\n}\n\nexport function setAnswer({\n    survey,\n    props,\n}: Context<{ question: string; answer: any }>) {\n    return survey.setAnswer(props.question, props.answer);\n}\nexport function setSurveyPage({ survey, props }: Context) {\n    return survey.setPage(props.pageNum);\n}\nexport function setSurveyData({\n    survey,\n    props,\n}: Context<{ data: SurveyModel['data'] }>) {\n    return survey.setData(props.data);\n}\nexport function nextPage({ survey }: Context) {\n    return { error: survey.nextPage() };\n}\nexport function previousPage({ survey }: Context) {\n    return { error: survey.previousPage() };\n}\nexport function completeSurvey({ survey }: Context) {\n    return { done: survey.submit() };\n}\n\nexport async function initGapi({\n    gapiClient,\n    props,\n}: Context<{ login: () => void; logout: () => void }>) {\n    return gapiClient.init(props);\n}\nexport async function disconnectGapi({ gapiClient }: Context) {\n    return gapiClient.disconnect();\n}\nexport async function createSheet({ googlesheets }: Context) {\n    let sheet = await googlesheets.createSheet();\n    return { sheet };\n}\nexport function getSheetVersion({ googlesheets }: Context) {\n    let version = googlesheets.getVersion();\n    return { version };\n}\nexport async function initSheet({\n    googlesheets,\n    props,\n}: Context<{ headerRow: any }>) {\n    const { spreadsheetId } = await googlesheets.createSheet();\n    if (!spreadsheetId) {\n        throw Error('Error initializng Google Sheet');\n    }\n    await googlesheets.addRow(spreadsheetId, props.headerRow);\n}\nexport async function serializeResults({\n    serialize,\n    props,\n}: Context<{ results: Record<string, unknown>[] }>) {\n    let { results } = props;\n\n    return { results: serialize.serialize(results) };\n}\nexport async function deserializeResults({\n    serialize,\n    props,\n}: Context<{ results: Record<string, any>[] }>) {\n    let { results } = props;\n\n    return { results: serialize.deserialize(results) };\n}\nexport async function loadPastResults({\n    googlesheets,\n    path,\n    props,\n}: Context<{ resultsId: string }>) {\n    let { resultsId } = props;\n\n    try {\n        let results = (await googlesheets.getSheet(resultsId)) || [];\n\n        return path.found({ results });\n    } catch (err) {\n        return path.notfound();\n    }\n}\nexport async function uploadResults({\n    googlesheets,\n    props,\n}: Context<{ results: any; resultsId: string }>) {\n    let { results, resultsId } = props;\n\n    return googlesheets.writeSheet(resultsId, results);\n}\n\nexport async function createAppData({\n    googleappdata,\n    props,\n}: Context<{ body: object }>) {\n    let id = await googleappdata.initData(props);\n\n    return { id };\n}\nexport async function updateAppData({\n    googleappdata,\n    props,\n}: Context<{ id: string; body: object }>) {\n    let result = await googleappdata.updateData(props);\n\n    return { result };\n}\nexport async function loadAppData({ googleappdata, path }: Context) {\n    let { data, id } = await googleappdata.getData();\n\n    if (data) {\n        return path.found({ body: data, id });\n    } else {\n        return path.notfound();\n    }\n}\n\nexport async function uploadScreenshot({\n    googledrive,\n    props,\n}: Context<{ file: File }>) {\n    let url = await googledrive.upload(props.file);\n\n    return { url };\n}\n\nexport async function getCurrentWeather({\n    weather,\n    props: { latitude, longitude },\n}: Context<{ latitude: string; longitude: string }>) {\n    return await weather.current({ lat: latitude, lon: longitude });\n}\n\nexport function getLastAnswer({ get, props }: Context<{ question: string }>) {\n    let { question } = props;\n\n    try {\n        let data = get(state`pastData`);\n\n        return { answer: data[data.length - 1][question] };\n    } catch (err) {\n        return {};\n    }\n}\n\nexport function initPages({ get, store }: Context) {\n    let pages = get(state`questions.pages`) as State['questions']['pages'];\n\n    pages.forEach((page) => {\n        forIn(page, function findKeys(val, key, obj, root = '') {\n            switch (key) {\n                case 'autocomplete':\n                    const { name } = obj;\n                    // @ts-ignore\n                    obj.choices ??= [];\n                    switch (val) {\n                        case 'previous':\n                            // @ts-ignore\n                            obj.choices = obj.choices.concat(\n                                get(state`pastAnswers.${name}`)\n                            );\n                            break;\n                        case 'previousLocationLabels':\n                            const locations: any[] = get(\n                                state`pastAnswers.locations`\n                            );\n                            // @ts-ignore\n                            obj.choices = locations\n                                .map(\n                                    (obj: { location: string }) => obj.location\n                                )\n                                .filter((location) => !/^\\d/.test(location));\n                            break;\n                        default:\n                    }\n                    break;\n                case 'previousAsChoices':\n                    if (val) {\n                        let { vauleName: name = obj.name, choices = [] } = obj;\n                        let previous: string[] =\n                            get(state`pastAnswers.${root}${name}`) || [];\n                        previous.forEach((ans) => {\n                            if (!choices.includes(ans)) {\n                                choices.push(ans);\n                            }\n                        });\n                        // @ts-ignore\n                        obj.choices = choices;\n                    }\n                    break;\n                default:\n                    if (typeof val === 'object') {\n                        forIn(val, (v, k, o) =>\n                            findKeys(v, k, o, `${root}${key}.`)\n                        );\n                    }\n            }\n        });\n    });\n\n    store.merge(state`questions`, { pages });\n}\n","import { sequence, set, unset, push, when, equals } from 'cerebral/factories';\nimport { state, sequences, props } from 'cerebral';\nimport * as actions from './actions';\n\nimport { State, Context } from './types';\n\n// The types that come with cerebral are lame\ndeclare module 'cerebral/factories' {\n    function set<T>(\n        target: T,\n        value: T,\n        transform: (value: T) => T\n    ): ActionFunction<{}, { [k: string]: T }>;\n    function set<T>(\n        target: T,\n        value: T\n    ): ActionFunction<{}, { [k: string]: T }>;\n\n    function when<T>(conditon: T): ActionFunction;\n\n    function push<T>(target: T[], value: T): ActionFunction;\n\n    type ActionFunction<Input = {}, Output = {}> = (\n        ctx: Context<State> & Input\n    ) =>\n        | Partial<Output & State>\n        | void\n        | Promise<Partial<Output & State> | void>;\n    type ISequenceArray<Props, Out> = Array<\n        | ActionFunction<Props & { props: Out }, Out>\n        | {\n              [key: string]:\n                  | ISequenceArray<Props, Out>\n                  | ActionFunction<Props & { props: Out }, Out>;\n          }\n    >;\n    function sequence<Input extends {} = {}, Output extends {} = {}>(\n        items: ISequenceArray<Input, Output> | ActionFunction<Input, Output>\n    ): ActionFunction<Input, Output>;\n}\n\nexport const init = sequence([\n    set(props`login`, sequences`login`),\n    set(props`logout`, sequences`logout`),\n    actions.initGapi,\n    ({ get }) => get(sequences`store.init`)(),\n    set(state`initialized`, true),\n]);\n\nexport const showDroneQRScanner = sequence([\n    set(state`droneQRScannerActive`, true),\n]);\nexport const hideDroneQRScanner = sequence([\n    set(state`droneQRScannerActive`, false),\n]);\nexport const showSensorQRScanner = sequence([\n    set(state`sensorQRScannerActive`, true),\n]);\nexport const hideSensorQRScanner = sequence([\n    set(state`sensorQRScannerActive`, false),\n]);\nexport const showNavigation = sequence([set(state`navigationOpen`, true)]);\nexport const hideNavigation = sequence([set(state`navigationOpen`, false)]);\n\nexport const setSurveyData = sequence([set(state`surveyData`, props`data`)]);\nexport const setAnswer = sequence([actions.setAnswer]);\nexport const setSurveyPage = sequence([set(state`pageNum`, props`pageNum`)]);\nexport const setPages = sequence(sequence([set(state`pages`, props`pages`)]));\nexport const goNextPage = sequence([\n    actions.nextPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num + 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n]);\nexport const goPreviousPage = sequence([\n    actions.previousPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num - 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n]);\nexport const completeSurvey = sequence([actions.completeSurvey]);\nexport const setCurrentLocation = sequence<\n    {},\n    {\n        question: string;\n        answer: string;\n        currentLoc: unknown;\n        locations: unknown[];\n    }\n>([\n    actions.getCurrentLocation,\n    set(props`locations`, state`surveyData.locations`),\n    // Using the push factory seems to break things...\n    ({ props }) => ({ locations: props.locations.concat(props.currentLoc) }),\n    set(props`question`, 'locations'),\n    set(props`answer`, props`locations`),\n    actions.setAnswer,\n]);\n\n// Create a sheet and put corresponding appdata in props...\nconst createSheetWithAppData = sequence<\n    {},\n    {\n        version: any;\n        body: Record<string, string>;\n        sheet: gapi.client.sheets.Spreadsheet;\n    }\n>([\n    actions.createSheet,\n    set(props`body`, {}),\n    set(props`body.resultsId`, props`sheet.spreadsheetId`),\n    // Only load results for the right version\n    // TODO: Support migrating sheets to higher versions?\n    ({ props }) => ({\n        body: { [`resultsId-v${props.version}`]: props.body.resultsId },\n    }),\n]);\n\nexport const loadappdata = sequence<\n    {},\n    { id: string; body: Record<string, string>; version: string }\n>([\n    actions.getSheetVersion,\n    actions.loadAppData,\n    {\n        found: [],\n        notfound: [createSheetWithAppData, actions.createAppData],\n    },\n    ({ props }) => ({\n        body: { resultsId: props.body[`resultsId-v${props.version}`] },\n    }),\n    set(state`resultsId`, props`body.resultsId`, (id) => id || ''),\n    set(state`appdataId`, props`id`),\n]);\n\nexport const uploadScreenshot = sequence([actions.uploadScreenshot]);\n\n// Run _after_ login\nexport const login = sequence([\n    when(state`loggedin`),\n    {\n        true: [], // Don't login multiple times?\n        false: [\n            set(state`loggedin`, true),\n            loadappdata,\n            set(props`resultsId`, state`resultsId`),\n            actions.loadPastResults,\n            {\n                found: [\n                    actions.deserializeResults,\n                    set(state`pastData`, props`results`),\n                ],\n                notfound: [\n                    createSheetWithAppData,\n                    set(state`resultsId`, props`sheet.spreadsheetId`),\n                    actions.updateAppData,\n                ],\n            },\n            actions.initPages,\n            set(state`loggedin`, props`name`, (name) => ({ name })),\n        ],\n    },\n]);\n// Runs _after_ logout\nexport const logout = sequence([\n    set(state`loggedin`, false),\n    set(state`pastData`, []),\n]);\n\nexport const disconnectGoogle = sequence([actions.disconnectGapi]);\n\nexport const createSheet = sequence([actions.createSheet]);\nexport const submitResults = sequence<\n    {},\n    { results: Record<string, any>[]; resultsId: string }\n>([\n    set(state`submitting`, true),\n    when(state`loggedin`),\n    {\n        true: [],\n        false: login,\n    },\n    push(state`pastData`, state`surveyData`),\n    set(props`results`, state`pastData`),\n    actions.serializeResults,\n    set(props`resultsId`, state`resultsId`),\n    actions.uploadResults,\n    set(state`resultsUrl`, props`resultsUrl`),\n    set(state`confirmSubmitOpen`, true),\n    ({ get }) => get(sequences`store.clear`)(),\n]);\n\nexport const confirmSubmit = sequence([\n    set(state`confirmSubmitOpen`, false),\n    () => window.location.reload(),\n]);\n\nexport const setDebugMenuOpen = sequence([\n    set(state`debugMenuOpen`, props`open`),\n]);\n\nexport const getCurrentLocationWeather = sequence([\n    actions.getCurrentLocation,\n    set(props`latitude`, props`currentLoc.latitude`),\n    set(props`longitude`, props`currentLoc.longitude`),\n    actions.getCurrentWeather,\n]);\n\nexport const autofill = sequence([\n    when(\n        props`question`,\n        state`surveyData`,\n        (q, d) => d[q] !== null && d[q] !== undefined\n    ),\n    {\n        true: [], // Don't autofill if already answered\n        false: [\n            equals(props`autofill`),\n            {\n                person: [set(props`answer`, state`loggedin.name`)],\n                // TODO: Combine lat/lon into one autofill?\n                latitude: [\n                    actions.getCurrentLocation,\n                    set(props`answer`, props`currentLoc.latitude`),\n                ],\n                longitude: [\n                    actions.getCurrentLocation,\n                    set(props`answer`, props`currentLoc.longitude`),\n                ],\n                location: [\n                    actions.getCurrentLocation,\n                    set(\n                        props`answer`,\n                        props`currentLoc`,\n                        ({ latitude, longitude }) => `${latitude},${longitude}`\n                    ),\n                ],\n                // TODO: Combine weather autofills?\n                temperature: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`main.temp`),\n                ],\n                windspeed: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`wind.speed`),\n                ],\n                winddirection: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`wind.deg`),\n                ],\n                lastused: [actions.getLastAnswer],\n                otherwise: [],\n            },\n        ],\n    },\n]);\n\nexport const displayError = sequence<{ error: string }, {}>([\n    ({ error }) => console.error(error),\n    set(state`error`, props`error`),\n]);\nexport const clearError = sequence([unset(state`error`)]);\n","import { state, Compute } from 'cerebral';\n\nimport forin from 'lodash.forin';\nimport isequal from 'lodash.isequal';\n\nimport { State } from './types';\nimport unanswered from '../unanswered';\n\nexport const canSubmit = Compute(\n    (get) =>\n        get(state`initialized`) &&\n        get(state`loggedin`) &&\n        !get(state`submitting`) &&\n        !get<State['pages']>(state`pages`).some((page) => page.error)\n);\n\nexport const canNext = Compute((get) => {\n    let page = get(state`pageNum`);\n    let pages = get(state`pages`);\n\n    return page < pages.length - 1 && !pages[page].error;\n});\n\nexport const canPrev = Compute((get) => {\n    let page = get(state`pageNum`);\n\n    return page > 0;\n});\n\n// Compute previous answers\n// Sorted in reverse chronological order, unique answers only\nexport const pastAnswers = Compute((get) => {\n    let data = get(state`pastData`);\n\n    let ans: Record<string, unknown[]> = {};\n    forin(data, (row) =>\n        forin(row, (val, key) => {\n            if (unanswered(val)) {\n                return;\n            }\n\n            if (Array.isArray(val)) {\n                return val.map(addAnswer);\n            } else {\n                return addAnswer(val);\n            }\n\n            function addAnswer(val: unknown) {\n                if (!ans[key]) {\n                    ans[key] = [val];\n                } else if (!ans[key].some((ans) => isequal(ans, val))) {\n                    ans[key].unshift(val);\n                }\n            }\n        })\n    );\n\n    return ans;\n});\n","import { DateTime } from 'luxon';\n\nexport const page = {\n    name: 'general',\n    title: 'General',\n    elements: [\n        {\n            name: 'jobname',\n            title: 'Job/Project name',\n            type: 'text',\n            autocomplete: 'previous',\n            choices: ['Bob Ross', 'Rusty Shackleford'],\n        },\n        {\n            name: 'purpose',\n            title: 'Operation/Purpose',\n            type: 'dropdown',\n            choices: [\n                'UAV',\n                'Planting',\n                {\n                    value: 'Spraying',\n                    text: 'Spraying/Spreading',\n                },\n                'Tillage',\n                'Harvest',\n                {\n                    value: 'Anomalies',\n                    text: 'Anomaly Reporting',\n                },\n                'Sensor Deployment',\n            ],\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'datetime',\n            title: 'Date/Time of data',\n            type: 'text',\n            inputType: 'datetime-local',\n            defaultValue: DateTime.local().toFormat(\"yyyy-MM-dd'T'HH:mm:ss\"),\n        },\n        {\n            type: 'panel',\n            elements: [\n                {\n                    // TODO: Support selecting region on a map\n                    name: 'locations',\n                    title: 'Collection locations',\n                    type: 'paneldynamic',\n                    panelCount: 1,\n                    minPanelCount: 1,\n                    panelAddText: 'Add Location',\n                    panelRemoveText: 'Remove Location',\n                    templateTitle: 'Location #{panelIndex}',\n                    templateElements: [\n                        {\n                            name: 'location',\n                            title: 'Lat/Lon or Label',\n                            type: 'text',\n                            autofill: 'location',\n                            autocomplete: 'previousLocationLabels',\n                            isRequired: true,\n                        },\n                    ],\n                },\n                /*\n                {\n                    name: 'location-button',\n                    title: 'Add current location',\n                    type: 'html',\n                    cerebralbutton: 'setCurrentLocation',\n                },\n                */\n            ],\n        },\n    ],\n};\n\nexport default page;\n","export const page = {\n    name: 'place',\n    title: 'Place',\n    elements: [\n        {\n            name: 'client',\n            title: 'Grower (or Client)',\n            type: 'text',\n            placeHolder: 'Farmer Frank',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'operation',\n            title: 'Farm (or Operation)',\n            type: 'text',\n            placeHolder: 'Frank Farms',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'site',\n            title: 'Field (or Site)',\n            type: 'text',\n            placeHolder: 'East Field',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'crop',\n            title: 'Crop',\n            type: 'text',\n            placeHolder: 'corn',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'prev-crop',\n            title: 'Previous Crop',\n            type: 'text',\n            placeHolder: 'beans',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'weather',\n            title: 'Weather',\n            type: 'panel',\n            elements: [\n                {\n                    name: 'weather-button',\n                    title: 'Get Current Weather',\n                    type: 'html',\n                    visible: false,\n                    // TODO: Implement functionality for button\n                    cerebralbutton: 'setCurrentWeather',\n                },\n                {\n                    name: 'temperature',\n                    title: 'Temperature (℉)',\n                    type: 'text',\n                    autofill: 'temperature',\n                    //inputType: 'number',\n                    placeHolder: '60 F',\n                },\n                {\n                    name: 'windspeed',\n                    title: 'Wind Speed (mph)',\n                    type: 'text',\n                    autofill: 'windspeed',\n                    //inputType: 'number',\n                    placeHolder: '10 mph',\n                },\n                {\n                    name: 'winddirection',\n                    title: 'Wind Direction',\n                    type: 'text',\n                    autofill: 'winddirection',\n                    //inputType: 'number',\n                    placeHolder: 'ENE',\n                },\n            ],\n        },\n    ],\n};\n\nexport default page;\n","const anomalies = [\n    'Weather Event',\n    'Weed',\n    'Insect',\n    'Disease',\n    'Vertebrate',\n    'Nutrient Deficiency',\n    'Drainage Installation or Repair',\n];\n\nexport const page = {\n    name: 'anomalies',\n    visibleIf: '{purpose} == \"Anomalies\"',\n    title: 'Anomalies and Disorders',\n    elements: [\n        {\n            name: 'anomalies',\n            title: 'Anomalies',\n            type: 'matrixdynamic',\n            rowCount: 0,\n            addRowText: 'Add Anomaly',\n            removeRowText: 'Remove Anomaly',\n            columns: [\n                {\n                    name: 'type',\n                    title: 'Type',\n                    cellType: 'dropdown',\n                    isRequired: true,\n                    hasOther: true,\n                    choices: anomalies,\n                },\n                {\n                    name: 'what',\n                    title: 'What',\n                    cellType: 'text',\n                    isRequired: true,\n                },\n                {\n                    name: 'when',\n                    title: 'When',\n                    cellType: 'text',\n                    inputType: 'datetime-local',\n                    isRequired: true,\n                },\n                {\n                    name: 'extent',\n                    title: 'Extent',\n                    cellType: 'text',\n                    isRequired: true,\n                },\n            ],\n        },\n        {\n            name: 'anomalies-panel-0',\n            title: 'Photo 1',\n            type: 'panel',\n            state: 'collapsed',\n            elements: [\n                {\n                    name: 'anomalies-photo-0',\n                    title: 'Photo',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n                {\n                    name: 'anomalies-photo-0-label',\n                    title: 'Label',\n                    type: 'text',\n                },\n            ],\n        },\n        {\n            name: 'anomalies-panel-1',\n            title: 'Photo 2',\n            type: 'panel',\n            state: 'collapsed',\n            elements: [\n                {\n                    name: 'anomalies-photo-1',\n                    title: 'Photo',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n                {\n                    name: 'anomalies-photo-1-label',\n                    title: 'Label',\n                    type: 'text',\n                },\n            ],\n        },\n    ],\n};\n\nexport default page;\n","export const page = {\n    name: 'harvest-conditions',\n    title: 'Crop Conditions',\n    visibleIf: '{purpose} == \"Harvest\"',\n    elements: [\n        {\n            name: 'harvest-conditions-moisture',\n            title: 'Grain Average Moisture (%)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n            placeHolder: '5 %',\n        },\n        {\n            name: 'harvest-conditions-anticipated-yield-avg',\n            title: 'Anticipated Yield Average (bu/ac)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n            placeHolder: '250 bu/ac',\n        },\n        {\n            name: 'harvest-conditions-lodging',\n            title: 'Lodging',\n            type: 'dropdown',\n            isRequired: true,\n            choices: ['None', 'Slight', 'Moderate', 'Severe'],\n        },\n        {\n            name: 'harvest-conditions-grain-quality',\n            title: 'Grain Quality',\n            type: 'tagbox',\n            placeHolder: 'Add conditions',\n            isRequired: false,\n            choices: [\n                'Moldy',\n                'Splits',\n                'Grain Damage',\n                'High Foreign Matter',\n                'Sprouting Seeds',\n            ],\n            previousAsChoices: true,\n        },\n    ],\n};\n\nexport default page;\n","export const page = {\n    name: 'harvest-transport',\n    title: 'Transport',\n    visibleIf: '{purpose} == \"Harvest\"',\n    elements: [\n        {\n            name: 'harvest-transport-cart',\n            title: 'Grain Cart?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'harvest-transport-cart-makemodel',\n            visibleIf: '{harvest-transport-cart} == true',\n            title: 'Grain Cart Make and Model',\n            type: 'text',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'harvest-transport-tractor-makemodel',\n            visibleIf: '{harvest-transport-cart} == true',\n            title: 'Tractor Make and Model',\n            type: 'text',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n    ],\n};\n\nexport default page;\n","export const page = {\n    name: 'machinery',\n    title: 'Machinery',\n    visibleIf:\n        '[\"Planting\", \"Spraying\", \"Tillage\", \"Harvest\"] contains {purpose}',\n    elements: [\n        {\n            name: 'machinery-operator',\n            title: 'Operator',\n            type: 'text',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-spray-or-spread',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Spray or Spread',\n            type: 'radiogroup',\n            choices: ['Spraying', 'Spreading'],\n        },\n        {\n            name: 'machinery-pull-type',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Pull Type',\n            type: 'radiogroup',\n            choices: ['Pull', 'Self-Propelled'],\n        },\n        {\n            name: 'machinery-makemodel',\n            // TODO: change title based on operation?\n            title: 'Machine Make and Model',\n            type: 'text',\n            hideIfChoicesEmpty: false,\n            hasOther: true,\n            storeOthersAsComment: false,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'planter-makemodel',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Planter Make and Model',\n            type: 'text',\n            hideIfChoicesEmpty: false,\n            hasOther: true,\n            storeOthersAsComment: false,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'planter-num-rows',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Number of Planter Rows',\n            type: 'text',\n            inputType: 'number',\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-implement',\n            title: 'Implement',\n            type: 'panel',\n            elements: [\n                {\n                    name: 'machinery-implement-type',\n                    visibleIf: '{purpose} == \"Tillage\"',\n                    title: 'Type',\n                    type: 'text',\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    autofill: 'lastused',\n                    autocomplete: 'previous',\n                },\n                {\n                    name: 'machinery-implement-makemodel',\n                    visibleIf:\n                        '{purpose} == \"Tillage\" or {machinery-pull-type} == \"Self-Propelled\"',\n                    title: 'Make and Model',\n                    type: 'text',\n                    hideIfChoicesEmpty: false,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    autofill: 'lastused',\n                    autocomplete: 'previous',\n                },\n            ],\n        },\n        {\n            name: 'machinery-calibration-report',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Calibration Report',\n            type: 'text',\n        },\n        {\n            name: 'machinery-row-width',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Row Width (in)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '24 in',\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-width',\n            visibleIf: '[\"Spraying\", \"Tillage\"] contains {purpose}',\n            title: 'Width (ft)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '30 ft',\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-hearder-width',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Header Width (ft or rows)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '30 ft',\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-sprayer-type',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Type',\n            type: 'dropdown',\n            autofill: 'lastused',\n            choices: ['Nozzles', 'Drop Tube', 'Spinner'],\n        },\n        {\n            name: 'machinery-rate',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Rate',\n            type: 'text',\n        },\n        {\n            name: 'machinery-speed',\n            title: 'Speed (mph)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '15 mph',\n        },\n        {\n            name: 'machinery-depth',\n            visibleIf: '[\"Planting\", \"Tillage\"] contains {purpose}',\n            title: 'Depth (in)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '1.5 in',\n        },\n        {\n            name: 'machinery-yield-mapped',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Yield Mapped?',\n            type: 'boolean',\n        },\n        {\n            name: 'machinery-yield-calibrated',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Yield Monitor Calibrated?',\n            type: 'boolean',\n        },\n        {\n            name: 'machinery-controller-makemodel',\n            visibleIf: '[\"Planting\", \"Spraying\"] contains {purpose}',\n            title: 'Controller Make and Model',\n            type: 'text',\n            hideIfChoicesEmpty: false,\n            hasOther: true,\n            storeOthersAsComment: false,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'machinery-variable-rate',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Variable Rate?',\n            type: 'boolean',\n        },\n        {\n            name: 'machinery-variable-rate-source',\n            visibleIf:\n                '{purpose} == \"Spraying\" and {machinery-variable-rate} == true',\n            title: 'Variable Rate Source',\n            type: 'text',\n            autocomplete: 'previous',\n        },\n    ],\n};\n\nexport default page;\n","export const page = {\n    name: 'planting-chemicals',\n    title: 'Chemicals',\n    visibleIf: '{purpose} == \"Planting\"',\n    elements: [\n        {\n            name: 'planting-chemicals-starter',\n            title: 'Starter/Fertilizer',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n        },\n        {\n            name: 'planting-chemicals-insectiside',\n            title: 'Insecticide',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n        },\n    ],\n};\n\nexport default page;\n","export const page = {\n    name: 'planting-seed',\n    title: 'Seed',\n    visibleIf: '{purpose} == \"Planting\"',\n    elements: [\n        {\n            name: 'seed-brand',\n            title: 'Brand',\n            type: 'text',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n            isRequired: true,\n        },\n        {\n            name: 'seed-variety',\n            title: 'Variety',\n            type: 'text',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n            isRequired: true,\n        },\n        {\n            name: 'seed-treatments',\n            title: 'Treatments',\n            type: 'tagbox',\n            isRequired: true,\n            placeHolder: 'Choose Treatments',\n            previousAsChoices: true,\n        },\n        {\n            type: 'panel',\n            elements: [\n                {\n                    name: 'seed-population',\n                    title: 'Population',\n                    type: 'text',\n                    inputType: 'number',\n                    autofill: 'lastused',\n                    isRequired: true,\n                },\n                {\n                    name: 'seed-population-units',\n                    title: 'Population units',\n                    type: 'dropdown',\n                    choices: ['seeds per acre', 'pounds per acre'],\n                    autofill: 'lastused',\n                    isRequired: true,\n                },\n            ],\n        },\n    ],\n};\n\nexport default page;\n","export const page = {\n    name: 'sensors',\n    visibleIf: '{purpose} == \"Sensor Deployment\"',\n    title: 'Sensors',\n    elements: [\n        {\n            // TODO: Support selecting region on a map\n            name: 'sensors-deployed',\n            title: 'Deployed Sensors',\n            type: 'paneldynamic',\n            panelCount: 1,\n            minPanelCount: 1,\n            panelAddText: 'Add Sensor',\n            panelRemoveText: 'Remove Sensor',\n            templateTitle: 'Sensor #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'sensor-name',\n                    valueName: 'name',\n                    title: 'Name of Node/Module',\n                    type: 'text',\n                },\n                {\n                    name: 'sensor-type',\n                    valueName: 'type',\n                    // TODO: change title based on operation?\n                    title: 'Sensor Type',\n                    type: 'text',\n                    autocomplete: 'previous',\n                    hideIfChoicesEmpty: false,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    //autocomplete: 'previous',\n                    //autofill: 'lastused',\n                    choices: [\n                        // TODO: Have default choices from a secondary sheet?\n                        'Air Temperature',\n                        'Air Relative Humidity',\n                        'Nitrate',\n                        'Meter Probe',\n                    ],\n                },\n                {\n                    name: 'sensor-location',\n                    valueName: 'location',\n                    title: 'Sensor Location',\n                    type: 'text',\n                    autofill: 'location',\n                },\n                {\n                    name: 'sensor-note',\n                    valueName: 'note',\n                    title: 'Sensor note or comment',\n                    type: 'comment',\n                },\n                {\n                    name: 'sensor-map',\n                    valueName: 'map',\n                    title: 'Screenshot of sensor location map',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n                {\n                    name: 'sensor-installation',\n                    valueName: 'installation',\n                    title: 'Photo of sensor installation',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n            ],\n        },\n    ],\n};\n\nexport default page;\n","export const page = {\n    name: 'spraying-chemicals',\n    title: 'Chemicals',\n    visibleIf: '{purpose} == \"Spraying\"',\n    elements: ['Herbicide', 'Insecticide', 'Fungicide', 'Fertilizer'].map(\n        (chem) => ({\n            name: `spraying-chemicals-${chem.toLowerCase()}s`,\n            title: `${chem}s`,\n            type: 'paneldynamic',\n            panelCount: 0,\n            panelAddText: `Add ${chem}`,\n            panelRemoveText: `Remove ${chem}`,\n            autofill: 'lastused',\n            templateTitle: `${chem} #{panelIndex}`,\n            templateElements: [\n                {\n                    name: `spraying-checmicals-${chem.toLowerCase()}s-product`,\n                    valueName: 'product',\n                    title: 'Product Name',\n                    type: 'text',\n                    isRequired: true,\n                },\n                {\n                    name: `spraying-checmicals-${chem.toLowerCase()}s-amount`,\n                    valueName: 'amount',\n                    title: 'Amount per Acre (this product)',\n                    type: 'text',\n                    inputType: 'number',\n                    isRequired: true,\n                },\n            ],\n        })\n    ),\n};\n\nexport default page;\n","export const page = {\n    name: 'tillage-conditions',\n    title: 'Conditions',\n    visibleIf: '{purpose} == \"Tillage\"',\n    elements: [\n        {\n            name: 'tillage-conditions-residue-start',\n            title: 'Residue Cover (%) at Start',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n        },\n        {\n            name: 'tillage-conditions-residue-after',\n            title: 'Residue Cover (%) after Tillage',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n        },\n        {\n            name: 'tillage-conditions-soil-temp',\n            title: 'Soil Temperature (℉)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: true,\n            placeHolder: '50 F',\n        },\n        {\n            name: 'tillage-conditions-soil-moisture',\n            title: 'Soil Moisture (%)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: true,\n            placeHolder: '23 %',\n        },\n        {\n            name: 'tillage-conditions-field-condition-start',\n            title: 'Field Condition at Start',\n            type: 'text',\n            isRequired: false,\n            autocomplete: 'previous',\n        },\n        {\n            name: 'tillage-conditions-field-condition-after',\n            title: 'Field Condition after Tillage',\n            type: 'text',\n            isRequired: false,\n            autocomplete: 'previous',\n        },\n    ],\n};\n\nexport default page;\n","export const page = {\n    name: 'b4ufly',\n    title: 'B4UFLY Status',\n    visible: false, // Get rid of B4UFLY page for now\n    elements: [\n        {\n            name: 'b4ufly-status',\n            title: 'Status',\n            type: 'dropdown',\n            isRequired: true,\n            choices: [\n                'proceed with caution',\n                'flying in controlled airspace (class B/C/D/E)',\n                'other',\n            ],\n        },\n        {\n            name: 'b4ufly-extra',\n            title: '',\n            type: 'panel',\n            visibleIf:\n                '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\n            elements: [\n                {\n                    name: 'b4ufly-airport-operator',\n                    title: 'Airport Operator Contact',\n                    type: 'text',\n                    requiredIf:\n                        '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n                {\n                    name: 'b4ufly-control-tower',\n                    title: 'Control Tower Contact',\n                    type: 'text',\n                    requiredIf:\n                        '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n                {\n                    name: 'b4ufly-prior-authorization',\n                    title: 'Prior Authorization',\n                    type: 'text',\n                    requiredIf:\n                        '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n            ],\n        },\n        {\n            // TODO: What the heck even is this?\n            name: 'b4ufly-options',\n            title: 'Options',\n            type: 'checkbox',\n            isRequired: true,\n            choices: [\n                'checked NOTAMS',\n                'checked flight restrictions',\n                'checked local restrictions',\n                'checked upcoming restrictions',\n                'checked national parks',\n            ],\n        },\n        {\n            name: 'b4ufly-certificate',\n            title: 'COW or COA #',\n            type: 'text',\n        },\n    ],\n};\n\nexport default page;\n","// TODO: Get these from sheets\nconst drones = [\n    {\n        make: 'Test',\n        model: 'testtest',\n        type: 'Fixed wing',\n    },\n];\n\nexport const page = {\n    name: 'uav-drone',\n    title: 'UAV Info',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            // TODO: make required for submission only\n            name: 'drone-screenshots',\n            title: 'Flight Planning Screenshots',\n            type: 'panel',\n            elements: [\n                {\n                    name: 'drone-flight-planning',\n                    title: 'Screenshot of Flight Planning',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n                {\n                    name: 'drone-advanced-flight-planning',\n                    title: 'Screenshot of Advanced Flight Planning',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n            ],\n        },\n        {\n            name: 'drone-qr',\n            title: 'Scan drone QR code',\n            type: 'html',\n            cerebralbutton: 'showDroneQRScanner',\n            visible: false,\n        },\n        {\n            name: 'uav-drone-type',\n            title: 'Type',\n            type: 'dropdown',\n            isRequired: true,\n            defaultValue: 'Fixed wing',\n            hasOther: true,\n            choices: ['Fixed wing', 'Multi-rotor', 'Helicopter'],\n        },\n        {\n            name: 'uav-drone-makemodel',\n            title: 'Make and Model',\n            type: 'dropdown',\n            autofill: 'lastused',\n            hideIfChoicesEmpty: false,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText: 'Please enter the new make and model',\n            choices: drones.map((e, i) => ({\n                text: e.make + ' ' + e.model,\n                value: e.make + ' ' + e.model,\n                //value: i,\n                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\n            })),\n        },\n    ],\n};\n\nexport default page;\n","export const page = {\n    name: 'uav-operator',\n    title: 'UAV Operator',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            name: 'remote-pics',\n            title: 'Remote Pilot in Command (PIC)',\n            description:\n                'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\n            type: 'paneldynamic',\n            panelCount: 1,\n            minPanelCount: 1,\n            panelAddText: 'Add Remote PIC',\n            panelRemoveText: 'Remove Remote PIC',\n            autofill: 'lastused',\n            templateTitle: 'Remote PIC #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'remote-pic-name',\n                    title: 'Name',\n                    type: 'text',\n                    autocomplete: 'previous',\n                    //autofill: 'person',\n                    isRequired: true,\n                    placeHolder: 'Rusty Shackleford',\n                },\n                {\n                    name: 'remote-pic-certificate',\n                    title: 'Certificate Number or equivalent',\n                    type: 'text',\n                    inputType: 'number',\n                    isRequired: true,\n                    placeHolder: '1234567',\n                    validators: [\n                        {\n                            type: 'regex',\n                            regex: /^[0-9]{7}$/,\n                            text: 'License number must be 7 digits',\n                        },\n                    ],\n                },\n            ],\n        },\n        {\n            name: 'observer',\n            title: 'Visual Observer (VO)',\n            description:\n                'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\n            type: 'paneldynamic',\n            panelCount: 0,\n            panelAddText: 'Add VO',\n            panelRemoveText: 'Remove VO',\n            templateTitle: 'VO #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'observer-name',\n                    title: 'Name',\n                    type: 'text',\n                    isRequired: true,\n                    placeHolder: 'John Doe',\n                },\n            ],\n        },\n    ],\n};\n\nexport default page;\n","// TODO: Get these from sheets\nconst sensors = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\n\nexport const page = {\n    name: 'uav-sensors',\n    title: 'Sensors',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            name: 'sensor-qr',\n            type: 'html',\n            cerebralbutton: 'showSensorQRScanner',\n            visible: false,\n        },\n        {\n            name: 'sensors',\n            title: 'Sensors',\n            type: 'paneldynamic',\n            panelCount: 0,\n            panelAddText: 'Add Sensor',\n            panelRemoveText: 'Remove Sensor',\n            autofill: 'lastused',\n            templateTitle: 'Sensor #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'uav-sensor-type',\n                    valueName: 'type',\n                    title: 'Type',\n                    type: 'text',\n                    autocomplete: 'previous',\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    choices: [\n                        'RGB',\n                        'Multispectral',\n                        'Hyperspectral',\n                        'LiDAR',\n                        'Thermal',\n                    ],\n                },\n                {\n                    name: 'uav-sensor-makemodel',\n                    title: 'Make and Model',\n                    type: 'dropdown',\n                    hideIfChoicesEmpty: false,\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new make and model',\n                    otherErrorText: 'Please enter the new make and model',\n                    choices: sensors.map((e, i) => ({\n                        text: e.make + ' ' + e.model,\n                        value: e.make + ' ' + e.model,\n                        //value: i,\n                        visibleIf: `{panel.type} == \"${e.type}\"`,\n                    })),\n                },\n            ],\n        },\n    ],\n};\n\nexport default page;\n","import * as pages0 from './pages/0-general.js'; import * as pages1 from './pages/1-place.js'; import * as pages2 from './pages/anomalies.js'; import * as pages3 from './pages/harvest/conditions.js'; import * as pages4 from './pages/harvest/transport.js'; import * as pages5 from './pages/machinery.js'; import * as pages6 from './pages/planting/chemicals.js'; import * as pages7 from './pages/planting/seed.js'; import * as pages8 from './pages/sensors.js'; import * as pages9 from './pages/spraying/chemicals.js'; import * as pages10 from './pages/tillage/conditions.js'; import * as pages11 from './pages/uav/b4ufly.js'; import * as pages12 from './pages/uav/drone.js'; import * as pages13 from './pages/uav/operator.js'; import * as pages14 from './pages/uav/sensors.js'; let pages = [pages0, pages1, pages2, pages3, pages4, pages5, pages6, pages7, pages8, pages9, pages10, pages11, pages12, pages13, pages14];\n\n// Load the default export of all pages\nexport default pages.map((page) => page.default);\n","/* eslint import/no-webpack-loader-syntax: off */\nimport pages from '!import-glob!./pages-loader';\n\npages.forEach((page) => {\n    // Add a footer to each page\n    page.elements.push(\n        {\n            name: `notes-${page.name}`,\n            // @ts-ignore\n            title: `${page.title} notes or comments`,\n            type: 'comment',\n        },\n        {\n            type: 'html',\n            html: '* Indicates required field',\n        }\n    );\n});\n\nexport default pages;\n","import localstore from './modules/localstore';\n\nimport type { ModuleDefinition } from 'cerebral';\nimport type { State, Sequences } from './types';\nimport * as providers from './providers';\nimport * as sequences from './sequences';\nimport * as computeds from './computeds';\n//import * as errors from './errors';\n\n// TODO: Should this be here??\nimport pages from '../pages';\n\n// Parts of state to keep in localstorage\nconst store = localstore(['pageNum', 'surveyData']);\n\nconst state: State = {\n    ...computeds,\n    initialized: false,\n    loggedin: null,\n    appdataId: null,\n    resultsId: null,\n    submitting: false,\n    navigationOpen: false,\n    confirmSubmitOpen: false,\n    droneQRScannerActive: false,\n    sensorQRScannerActive: false,\n    surveyData: null,\n    pastData: [],\n    pages: [],\n    pageNum: 0,\n    questions: {\n        showNavigationButtons: false,\n        goNextPageAutomatic: true,\n        clearInvisibleValues: 'onHidden',\n        checkErrorsMode: 'onValueChanged',\n        pages,\n    },\n};\n\n/**\n * React App breaks with a var named module...\n */\nconst _module: ModuleDefinition<State, Sequences> = {\n    sequences,\n    state,\n    catch: [\n        // TODO: Pop up toast or something about giving permission?\n        //[errors.GetLocationError, ({error}) => console.error(error)],\n        //[Error, ({error}) => console.error(error)],\n        [Error, sequences.displayError],\n    ],\n    providers,\n    modules: {\n        store,\n        //storage,\n    },\n};\n\nexport default _module;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from 'cerebral';\nimport { Container } from '@cerebral/react';\nimport Devtools from 'cerebral/devtools';\n\nimport AppComponent from './App';\nimport main from './main';\n\nconst app = App(main, {\n    devtools:\n        process.env.NODE_ENV === 'production'\n            ? undefined\n            : Devtools({ host: 'localhost:8000', reconnect: true }),\n    throwToConsole: true,\n    noRethrow: false,\n    returnSequencePromise: true,\n});\n\n// Run init sequence\napp.on('initialized:model', () => app.getSequence('init')());\n\nReactDOM.render(\n    <Container app={app}>\n        <AppComponent />\n    </Container>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n    serviceWorker.register();\n} else {\n    serviceWorker.unregister();\n}\n"],"sourceRoot":""}