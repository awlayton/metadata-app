{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","autocompleteWidget.js","tagboxWidget.js","unanswered.js","Questions.js","styles.js","PagesDrawer.js","ConfirmSubmitDialog.js","DebugButton.js","ErrorDisplay.js","googleScopes.js","describe.js","describe-loader.js","App.js","main/modules/localstore/index.js","main/providers.js","main/errors.js","main/actions.js","main/sequences.js","main/computeds.js","pages/0-general.js","pages/1-place.js","pages/anomalies.js","pages/harvest/conditions.js","pages/harvest/transport.js","pages/machinery.js","pages/planting/chemicals.js","pages/planting/seed.js","pages/spraying/chemicals.js","pages/tillage/conditions.js","pages/uav/b4ufly.js","pages/uav/drone.js","pages/uav/operator.js","pages/uav/sensors.js","pages-loader.js","pages.js","main/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","connect","props","Dialog","fullScreen","open","AppBar","Toolbar","IconButton","color","onClick","onClose","aria-label","Typography","variant","style","width","onScan","data","onData","model","require","$","name","widgetIsLoaded","ui","autocomplete","render","question","isDefaultRender","isFit","activatedByChanged","activatedBy","Survey","metaData","findProperty","addProperty","default","className","onGetValue","obj","choicesByUrl","getData","onSetValue","value","setData","afterRender","el","is","find","appendTo","classes","source","choices","map","it","text","willUnMount","info","debug","title","iconName","fn","select2","defaultJSON","htmlTemplate","getType","addClass","visible","tagbox","properties","fixStyles","e","parentElement","querySelector","border","self","this","settings","tags","disabled","isReadOnly","placeholder","placeHolder","theme","tokenSeparators","select2Config","$el","updateValueHandler","forEach","length","option","Option","append","trigger","val","updateChoices","empty","ajax","visibleChoices","choice","id","readOnlyChangedCallback","prop","registerFunctionOnPropertyValueChanged","valueChangedCallback","setValue","some","params","push","on","willUnmount","off","unanswered","isEmpty","every","undefined","Instance","addCustomWidget","acwidget","tbwidget","Pica","bind","loggers","logCB","arguments","rest","logger","extend","Questions","get","palette","themeColors","ThemeColors","primary","main","dark","secondary","divider","background","paper","light","applyTheme","questions","surveyModel","pageNum","currentPageNo","reaction","updatePages","survey","setPages","pages","visiblePages","page","hasErrors","onCurrentPageChanged","setPage","onUpdateQuestionCssClasses","cssClasses","preview","classNames","ssPreview","onPageVisibleChanged","onPageAdded","onUploadFiles","a","files","callback","file","upload","res","content","url","onValueChanging","oldValue","onValueChanged","setTimeout","onMatrixRowAdded","rowIndex","onMatrixRowRemoved","onDynamicPanelItemValueChanged","itemIndex","itemValue","onMatrixCellValueChanged","columnName","row","onValidateQuestion","completedHtml","ReactDOMServer","renderToString","ThemeProvider","onQuestionAdded","options","onAfterRenderQuestion","htmlElement","autofill","seq","answer","cerebralbutton","sequences","ReactDOM","Button","Component","init","withTheme","styles","root","display","alignItems","justifyContent","textAlign","flexGrow","alignSelf","maxWidth","appBar","top","bottom","marginLeft","breakpoints","up","toolbar","mixins","bottomBar","grow","menuButton","marginRight","drawer","flexShrink","drawerPaper","icon","fontSize","iconVariant","opacity","spacing","backgroundColor","navigationOpen","showNavigation","hideNavigation","setSurveyPage","withStyles","contents","align","noWrap","Divider","List","ListItem","key","button","selected","ListItemIcon","ListItemText","secondaryTypographyProps","readme","component","Link","target","href","Hidden","permScreens","implementation","SwipeableDrawer","onOpen","tempScreens","Drawer","resultsUrl","confirm","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","setState","submitResults","disconnect","aria-owns","aria-haspopup","process","REACT_APP_GIT","MenuItem","close","Snackbar","anchorOrigin","vertical","horizontal","SnackbarContent","message","action","join","describe","version","semverString","meta","queryString","parse","search","createMuiTheme","type","gold","addEventListener","preventDefault","install","prompt","App","smUp","xsDown","position","canSubmit","submit","data-theme","data-scope","scope","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","initialized","loggedin","isSinglePage","singlePage","Box","p","CircularProgress","size","onComplete","MobileStepper","steps","activeStep","mobileStepper","nextButton","canNext","goNextPage","backButton","canPrev","goPreviousPage","showDroneQRScanner","showSensorQRScanner","login","logout","google","createSheet","Fragment","CssBaseline","gapi","GetLocationError","CerebralError","GAPIError","err","result","SerializeError","r","c","DeserializeError","geolocation","getCurrentLoc","Promise","resolve","reject","getCurrentPosition","pos","coords","code","msg","errors","setAnswer","num","nextPage","previousPage","prevPage","completeLastPage","gapiClient","googleapi","tap","load","onerror","timeout","ontimeout","client","discoveryDocs","auth","auth2","getAuthInstance","listener","signedIn","user","currentUser","getBasicProfile","context","getName","isSignedIn","listen","hasGrantedScopes","grant","appdataScope","googleappdata","drive","list","spaces","q","fields","appProperties","initData","body","create","resource","mimeType","parents","updateData","update","fileId","sheetsScope","semver","sheetVer","major","minor","googlesheets","sheets","ver","getVersion","spreadsheets","getSheet","values","spreadsheetId","range","sheet","XLSX","utils","aoa_to_sheet","sheet_to_json","writeSheet","sheetsURL","json_to_sheet","header","valueInputOption","includeValuesInResponse","majorDimension","addRow","cols","insertDataOption","googledrive","token","getToken","fetch","method","headers","Headers","Authorization","fileResult","ducky","validate","compile","serialize","i","serialized","Object","keys","execute","JSON","stringify","deserialize","deserialized","startsWith","kkey","substring","weatherstack","axios","baseURL","interceptors","request","use","access_key","units","weather","current","query","getCurrentLocation","currentLoc","latitude","longitude","results","path","resultsId","found","notfound","set","setSurveyData","actions","completeSurvey","done","setCurrentLocation","locations","concat","createSheetWithAppData","loadappdata","uploadScreenshot","when","true","false","store","forIn","findKeys","ans","includes","merge","disconnectGoogle","confirmSubmit","reload","setDebugMenuOpen","getCurrentLocationWeather","d","equals","person","temperature","windspeed","winddirection","lastused","otherwise","displayError","clearError","unset","pastAnswers","forin","Array","isArray","addAnswer","isequal","unshift","elements","isRequired","inputType","defaultValue","DateTime","local","toFormat","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","visibleIf","rowCount","addRowText","removeRowText","columns","cellType","hasOther","previousAsChoices","hideIfChoicesEmpty","storeOthersAsComment","otherText","otherErrorText","chem","toLowerCase","valueName","requiredIf","storeDataAsText","acceptedTypes","allowMultiple","make","description","validators","regex","html","paths","providers","localstore","ls","clear","remove","persistState","moduleState","success","parallel","reactions","Reaction","modulePath","sequence","reduce","assign","computeds","appdataId","submitting","confirmSubmitOpen","surveyData","pastData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","Error","modules","app","devtools","throwToConsole","noRethrow","returnSequencePromise","getSequence","document","getElementById","URL","origin","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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I,QAAS,IAIb,CACI9B,KAAM,mBACNugB,UAAW,0BACXle,MAAO,yBACP+O,KAAM,OACNuO,YAAY,EACZC,UAAW,SACXhV,SAAU,YAEd,CACI5K,KAAM,sBACNqC,MAAO,YACP+O,KAAM,QACNsO,SAAU,CACN,CACI1f,KAAM,2BACNugB,UAAW,yBACXle,MAAO,OACP+O,KAAM,WACNuO,YAAY,EACZkB,UAAU,EACVG,sBAAsB,EACtBC,UAAW,eACXC,eAAgB,4BAChBtW,SAAU,WACVzK,aAAc,YAElB,CACIH,KAAM,gCACNugB,UAAW,sEACXle,MAAO,iBACP+O,KAAM,WACN2P,oBAAoB,EACpBpB,YAAY,EACZkB,UAAU,EACVG,sBAAsB,EACtBC,UAAW,yBACXC,eACI,sCACJtW,SAAU,WACVzK,aAAc,cAI1B,CACIH,KAAM,+BACNugB,UAAW,0BACXle,MAAO,qBACP+O,KAAM,OACNuO,YAAY,GAEhB,CACI3f,KAAM,sBACNugB,UAAW,0BACXle,MAAO,iBACP+O,KAAM,OACNwO,UAAW,SACXhc,YAAa,OACb+b,YAAY,EACZ/U,SAAU,YAEd,CACI5K,KAAM,kBACNugB,UAAW,6CACXle,MAAO,aACP+O,KAAM,OACNwO,UAAW,SACXhc,YAAa,QACb+b,YAAY,EACZ/U,SAAU,YAEd,CACI5K,KAAM,0BACNugB,UAAW,yBACXle,MAAO,4BACP+O,KAAM,OACNwO,UAAW,SACXhc,YAAa,QACb+b,YAAY,EACZ/U,SAAU,YAEd,CACI5K,KAAM,yBACNugB,UAAW,0BACXle,MAAO,OACP+O,KAAM,WACNuO,YAAY,EACZ/U,SAAU,WACV9I,QAAS,CACL,UACA,YACA,YAGR,CACI9B,KAAM,iBACNugB,UAAW,0BACXle,MAAO,OACP+O,KAAM,OACNuO,YAAY,GAEhB,CACI3f,KAAM,kBACNqC,MAAO,cACP+O,KAAM,OACNuO,YAAY,EACZC,UAAW,SACXhc,YAAa,UAEjB,CACI5D,KAAM,kBACNugB,UAAW,6CACXle,MAAO,aACP+O,KAAM,OACNuO,YAAY,EACZC,UAAW,SACXhc,YAAa,UAEjB,CACI5D,KAAM,yBACNugB,UAAW,yBACXle,MAAO,gBACP+O,KAAM,UACNuO,YAAY,GAEhB,CACI3f,KAAM,6BACNugB,UAAW,yBACXle,MAAO,4BACP+O,KAAM,UACNuO,YAAY,GAEhB,CACI3f,KAAM,iCACNugB,UAAW,8CACXle,MAAO,4BACP+O,KAAM,WACN2P,oBAAoB,EACpBpB,YAAY,EACZkB,UAAU,EACVG,sBAAsB,EACtBC,UAAW,yBACXC,eACI,sCACJ/gB,aAAc,WACdyK,SAAU,WACV9I,QAAS,IAIb,CACI9B,KAAM,0BACNugB,UAAW,0BACXle,MAAO,iBACP+O,KAAM,UACNuO,YAAY,GAEhB,CACI3f,KAAM,iCACNugB,UACI,gEACJle,MAAO,uBACP+O,KAAM,OACNuO,YAAY,EACZxf,aAAc,cC5OX,IACXH,KAAM,qBACNqC,MAAO,YACPke,UAAW,0BACXb,SAAU,CACN,CACI1f,KAAM,6BACNqC,MAAO,UACP+O,KAAM,OACNuO,YAAY,EACZxf,aAAc,WACdyK,SAAU,YAEd,CACI5K,KAAM,iCACNqC,MAAO,cACP+O,KAAM,OACNuO,YAAY,EACZxf,aAAc,WACdyK,SAAU,cCnBP,IACX5K,KAAM,gBACNqC,MAAO,OACPke,UAAW,0BACXb,SAAU,CACN,CACI1f,KAAM,aACNqC,MAAO,QACP+O,KAAM,OACNxG,SAAU,WACVzK,aAAc,WACdwf,YAAY,GAEhB,CACI3f,KAAM,eACNqC,MAAO,UACP+O,KAAM,OACNxG,SAAU,WACVzK,aAAc,WACdwf,YAAY,GAEhB,CACI3f,KAAM,kBACNqC,MAAO,aACP+O,KAAM,SACNuO,YAAY,EACZ/b,YAAa,oBACbkd,mBAAmB,GAEvB,CACI9gB,KAAM,kBACNqC,MAAO,aACP+O,KAAM,OACNwO,UAAW,SACXhV,SAAU,WACV+U,YAAY,KCnCT,IACX3f,KAAM,qBACNqC,MAAO,YACPke,UAAW,0BACXb,SAAU,CAAC,YAAa,cAAe,YAAa,cAC/C3d,KAAI,SAAAof,GAAI,MAAK,CACVnhB,KAAK,sBAAD,OAAwBmhB,EAAKC,cAA7B,KACJ/e,MAAM,GAAD,OAAK8e,EAAL,KACL/P,KAAM,eACN6O,WAAY,EACZE,aAAa,OAAD,OAASgB,GACrBf,gBAAgB,UAAD,OAAYe,GAC3BvW,SAAU,WACVyV,cAAc,GAAD,OAAKc,EAAL,kBACbb,iBAAkB,CACd,CACItgB,KAAK,uBAAD,OAAyBmhB,EAAKC,cAA9B,aACJC,UAAW,UACXhf,MAAO,eACP+O,KAAM,OACNuO,YAAY,GAEhB,CACI3f,KAAK,uBAAD,OAAyBmhB,EAAKC,cAA9B,YACJC,UAAW,SACXhf,MAAO,iCACP+O,KAAM,OACNwO,UAAW,SACXD,YAAY,SC5BjB,IACX3f,KAAM,qBACNqC,MAAO,aACPke,UAAW,yBACXb,SAAU,CACN,CACI1f,KAAM,mCACNqC,MAAO,6BACP+O,KAAM,OACNwO,UAAW,SACXD,YAAY,GAEhB,CACI3f,KAAM,mCACNqC,MAAO,kCACP+O,KAAM,OACNwO,UAAW,SACXD,YAAY,GAEhB,CACI3f,KAAM,+BACNqC,MAAO,4BACP+O,KAAM,OACNwO,UAAW,SACXD,YAAY,EACZ/b,YAAa,QAEjB,CACI5D,KAAM,mCACNqC,MAAO,oBACP+O,KAAM,OACNwO,UAAW,SACXD,YAAY,EACZ/b,YAAa,QAEjB,CACI5D,KAAM,2CACNqC,MAAO,2BACP+O,KAAM,OACNuO,YAAY,EACZxf,aAAc,YAElB,CACIH,KAAM,2CACNqC,MAAO,gCACP+O,KAAM,OACNuO,YAAY,EACZxf,aAAc,cC/CX,IACXH,KAAM,SACNqC,MAAO,gBACPQ,SAAS,EACT6c,SAAU,CACN,CACI1f,KAAM,gBACNqC,MAAO,SACP+O,KAAM,WACNuO,YAAY,EACZ7d,QAAS,CACL,uBACA,gDACA,UAGR,CACI9B,KAAM,eACNqC,MAAO,GACP+O,KAAM,QACNmP,UAAW,mGACXb,SAAU,CACN,CACI1f,KAAM,0BACNqC,MAAO,2BACP+O,KAAM,OACNkQ,WAAY,sEAEhB,CACIthB,KAAM,uBACNqC,MAAO,wBACP+O,KAAM,OACNkQ,WAAY,sEAEhB,CACIthB,KAAM,6BACNqC,MAAO,sBACP+O,KAAM,OACNkQ,WAAY,wEAIxB,CAEIthB,KAAM,iBACNqC,MAAO,UACP+O,KAAM,WACNuO,YAAY,EACZ7d,QAAS,CACL,iBACA,8BACA,6BACA,gCACA,2BAGR,CACI9B,KAAM,qBACNqC,MAAO,eACP+O,KAAM,UClDH,IACXpR,KAAM,YACNqC,MAAO,WACPke,UAAW,qBACXb,SAAU,CACN,CAEI1f,KAAM,oBACNqC,MAAO,8BACP+O,KAAM,QACNsO,SAAU,CACN,CACI1f,KAAM,wBACNqC,MAAO,gCACP+O,KAAM,OACNmQ,iBAAiB,EACjBC,cAAe,UACfC,eAAe,GAEnB,CACIzhB,KAAM,iCACNqC,MAAO,yCACP+O,KAAM,OACNmQ,iBAAiB,EACjBC,cAAe,UACfC,eAAe,KAI3B,CACIzhB,KAAM,WACNqC,MAAO,qBACP+O,KAAM,OACNrG,eAAgB,qBAChBlI,SAAS,GAEb,CACI7C,KAAM,iBACNqC,MAAO,OACP+O,KAAM,WACNuO,YAAY,EACZE,aAAc,aACdgB,UAAU,EACV/e,QAAS,CACL,aACA,cACA,eAGR,CACI9B,KAAM,sBACNqC,MAAO,iBACP+O,KAAM,WACNxG,SAAU,WACVmW,oBAAoB,EACpBF,UAAU,EACVG,sBAAsB,EACtBC,UAAW,yBACXC,eAAgB,sCAChBpf,QAnEG,CACX,CACI4f,KAAM,OACN7hB,MAAO,WACPuR,KAAM,eA+DcrP,KAAI,SAACkB,EAAG8X,GAAJ,MAAW,CAC3B9Y,KAAMgB,EAAEye,KAAO,IAAMze,EAAEpD,MACvBwB,MAAO4B,EAAEye,KAAO,IAAMze,EAAEpD,MAExB0gB,UAAU,wBAAD,OAA0Btd,EAAEmO,KAA5B,YCxEV,IACXpR,KAAM,eACNqC,MAAO,eACPke,UAAW,qBACXb,SAAU,CACN,CACI1f,KAAM,cACNqC,MAAO,gCACPsf,YAAa,4MACbvQ,KAAM,eACN6O,WAAY,EACZC,cAAe,EACfC,aAAc,iBACdC,gBAAiB,oBACjBxV,SAAU,WACVyV,cAAe,2BACfC,iBAAkB,CACd,CACItgB,KAAM,kBACNqC,MAAO,OACP+O,KAAM,OACNjR,aAAc,WAEdwf,YAAY,EACZ/b,YAAa,qBAEjB,CACI5D,KAAM,yBACNqC,MAAO,mCACP+O,KAAM,OACNwO,UAAW,SACXD,YAAY,EACZ/b,YAAa,UACbge,WAAY,CACR,CACIxQ,KAAM,QACNyQ,MAAO,aACP5f,KAAM,uCAO1B,CACIjC,KAAM,WACNqC,MAAO,uBACPsf,YAAa,iMACbvQ,KAAM,eACN6O,WAAY,EACZE,aAAc,SACdC,gBAAiB,YACjBC,cAAe,mBACfC,iBAAkB,CACd,CACItgB,KAAM,gBACNqC,MAAO,OACP+O,KAAM,OACNuO,YAAY,EACZ/b,YAAa,gBC7ClB,IACX5D,KAAM,cACNqC,MAAO,UACPke,UAAW,qBACXb,SAAU,CACN,CACI1f,KAAM,YACNoR,KAAM,OACNrG,eAAgB,sBAChBlI,SAAS,GAEb,CACI7C,KAAM,UACNqC,MAAO,UACP+O,KAAM,eACN6O,WAAY,EACZE,aAAc,aACdC,gBAAiB,gBACjBxV,SAAU,WACVyV,cAAe,uBACfC,iBAAkB,CACd,CACItgB,KAAM,kBACNqhB,UAAW,OACXhf,MAAO,OACP+O,KAAM,WACNuO,YAAY,EACZkB,UAAU,EACVG,sBAAsB,EACtBC,UAAW,eACXC,eAAgB,4BAChBpf,QAAS,CACL,MACA,gBACA,gBACA,QACA,YAGR,CACI9B,KAAM,uBACNqC,MAAO,iBACP+O,KAAM,WACN2P,oBAAoB,EACpBpB,YAAY,EACZkB,UAAU,EACVG,sBAAsB,EACtBC,UAAW,yBACXC,eACI,sCACJpf,QA/DJ,CACZ,CACI4f,KAAM,OACN7hB,MAAO,QACPuR,KAAM,OAEV,CACIsQ,KAAM,SACN7hB,MAAO,UACPuR,KAAM,kBAsDuBrP,KAAI,SAACkB,EAAG8X,GAAJ,MAAW,CAC5B9Y,KAAMgB,EAAEye,KAAO,IAAMze,EAAEpD,MACvBwB,MAAO4B,EAAEye,KAAO,IAAMze,EAAEpD,MAExB0gB,UAAU,oBAAD,OAAsBtd,EAAEmO,KAAxB,cCjElB,OAHqtB,CAAC,EAAQ,EAAQ,EAAQ,EAAQ,EAAQ,EAAQ,EAAQ,EAAQ,EAAQ,EAAQ,EAAS,EAAS,EAAS,GAG3zBrP,IAAImG,GAAQA,EAAKpH,SCAtCkH,GAAM9D,SAAQ,SAAAgE,GAEVA,EAAKwX,SAASpa,KACV,CACItF,KAAK,SAAD,OAAWkI,EAAKlI,MACpBqC,MAAO,oBACP+O,KAAM,WAEV,CACIA,KAAM,OACN0Q,KAAM,kCAKH9Z,IrBZC+Z,GqBYD/Z,MCPT6V,ItBLUkE,GsBKS,CAAC,UAAW,ctBLV,CACvBC,UAAW,CACPC,WAAY,CACRtb,IADQ,SACJoH,GACA,OAAOmU,KAAGvb,IAAIoH,IAGlBgP,IALQ,SAKJhP,EAAKvJ,GACL,OAAO0d,KAAGnF,IAAIhP,EAAKvJ,IAGvB2d,MATQ,SASFpU,GACF,OAAOmU,KAAGE,OAAOrU,MAK7B7P,MAAO,CACHqU,aAAa,GAGjBvH,UAAW,CACPqX,aAAc,CACV3E,aAAK4E,sBAAA,OACL,CACI3E,KAAM,YAA0B,IAAxBsE,EAAuB,EAAvBA,WAAYtjB,EAAW,EAAXA,MACXoP,EAAYpP,EAAZoP,IAAKvJ,EAAO7F,EAAP6F,IACV,MAAO,CAAC+d,QAASN,EAAWlF,IAAIhP,EAAKvJ,KAEzCoZ,MAAO,KAGfuE,MAAO,CACHK,aAAS,cAAeT,GAAMhgB,KAAI,SAAA4a,GAAI,MAAI,CACtC,kBAAmB,CAACnY,IAApB,EAAEyd,WAAkCE,MAAMxF,WAGlDvR,KAAM,CAEFoX,aAAS,YAAaT,GAAMhgB,KAAI,SAAA4a,GAAI,MAAI,CACpC,kBAAmB,CAACnY,IAApB,EAAEyd,WAAkCtb,IAAIgW,KACxCe,aAAK/e,gBAAA,OAAY,SAAA6F,GAAG,OAAY,OAARA,KACxB,CACImZ,KAAM,GACNC,MAAO,CACHF,aAAK/e,gBAAA,OAAY,SAAA6F,GAAG,MAAmB,kBAARA,KAC/B,CACImZ,KAAM,CAACO,aAAMhgB,gBAAA,KAAQye,GAAQhe,gBAAhB,QACbif,MAAO,CAACb,aAAI7e,gBAAA,KAAQye,GAAQhe,gBAAhB,gBAK5Boe,aAAIuF,sBAAA,OAA0B,KAKtCG,UAAWV,GAAMhgB,KAAI,SAAA4a,GACjB,IAAI/U,EAAW8a,mBACX,CACIle,IAAKtG,gBAAF,KAAUye,KAIjB,YAAiB,IAAfnY,EAAc,EAAdA,IAAKmC,EAAS,EAATA,IACG3G,EAAO4H,EAAS+a,WAAWhS,KAAK,KAEtC,OADiBhK,EAAIqE,oBAAA,KAAYhL,GAC1B4iB,CAAS,CAAC7U,IAAK4O,EAAMnY,WAGpC,OAAO,gBAAEmY,EAAO/U,MACjBib,QAAO,SAAC5hB,EAAK2G,GAAN,OAAmBqT,OAAO6H,OAAO7hB,EAAK2G,KAAW,MsBjEhD,IACXoD,YACA9M,MAAM,gBACC6kB,EADF,CAEDxQ,aAAa,EACbC,SAAU,KACVwQ,UAAW,KACXpG,UAAW,KACXqG,YAAY,EACZ7V,gBAAgB,EAChB8V,mBAAmB,EACnB/Q,sBAAsB,EACtBE,uBAAuB,EACvB8Q,WAAY,KACZC,SAAU,GACVpb,MAAO,GACPN,QAAS,EACTF,UAAW,CACP6b,uBAAuB,EACvBC,qBAAqB,EACrBC,qBAAsB,WACtBC,gBAAiB,iBACjBxb,YAGRxJ,MAAO,CAIH,CAACilB,MAAOzY,KAEZgX,YACA0B,QAAS,CACL7F,WClCF8F,GAAMjS,kBAAI1K,GAAM,CAClB4c,SACI,KACJC,gBAAgB,EAChBC,WAAW,EACXC,uBAAuB,IAI3BJ,GAAIpe,GAAG,qBAAqB,kBAAMnH,QAAQC,IAAI,WAAaslB,GAAIK,YAAY,OAAhBL,MAE3D1Y,IAAS7K,OACL,kBAAC,YAAD,CAAWujB,IAAKA,IACZ,kBAAC,GAAD,OAERM,SAASC,eAAe,SvCLjB,SAAkB1mB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI0mB,IAAInU,0CAAwB9S,OAAOC,SAASsR,MACpD2V,SAAWlnB,OAAOC,SAASinB,OAIvC,OAGFlnB,OAAOoU,iBAAiB,QAAQ,WAC9B,IAAM/T,EAAK,UAAMyS,0CAAN,sBAEPhT,IAgEV,SAAiCO,EAAOC,GAEtC6c,MAAM9c,GACHK,MAAK,SAAAymB,GAEJ,IAAMC,EAAcD,EAAS9J,QAAQ5T,IAAI,gBAEnB,MAApB0d,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C/mB,UAAUC,cAAc+mB,MAAM7mB,MAAK,SAAAC,GACjCA,EAAa6mB,aAAa9mB,MAAK,WAC7BV,OAAOC,SAASkhB,eAKpB/gB,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEArFAsmB,CAAwBpnB,EAAOC,GAI/BC,UAAUC,cAAc+mB,MAAM7mB,MAAK,WACjCQ,QAAQC,IACN,gHAMJf,EAAgBC,EAAOC,OuCjB3BE,K","file":"static/js/main.2ab8d1eb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {connect} from '@cerebral/react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport QrReader from 'react-qr-reader';\n\nfunction QRDialog(props) {\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n        >\n          <AppBar>\n            <Toolbar>\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant='h6' color='inherit'>\n                Scan QR code\n              </Typography>\n            </Toolbar>\n          </AppBar>\n            <QrReader\n                style={{width: '100%'}}\n                onScan={data => {\n                    if (!data) {\n                        return;\n                    }\n\n\t\t\t\t\tprops.onData(data);\n                    props.onClose();\n                }}\n            />\n        </Dialog>\n    );\n}\n\nexport default connect({\n}, QRDialog);\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\n// Want a singleton of survey model\nexport default {\n    model: null\n};\n","import * as Survey from 'survey-react';\n\nrequire('jquery-ui/themes/base/core.css');\nrequire('jquery-ui/themes/base/menu.css');\nrequire('jquery-ui/themes/base/autocomplete.css');\nrequire('jquery-ui/themes/base/theme.css');\n\nlet $ = require('jquery');\nrequire('jquery-ui/ui/widgets/autocomplete');\n\nexport default {\n    name: 'autocomplete',\n\n    widgetIsLoaded() {\n        return !!$.ui.autocomplete;\n    },\n\n    // Doesn't let you type unles this is here...\n    render(question) {\n    },\n\n    isDefaultRender: true,\n\n    isFit(question) {\n        return !!question.autocomplete;\n    },\n\n    activatedByChanged(activatedBy) {\n        if (Survey.JsonObject.metaData.findProperty('text', 'autofill')) {\n            return;\n        }\n\n        Survey.JsonObject.metaData.addProperty('question', {\n            name: 'autocomplete',\n            default: false,\n        });\n        Survey.JsonObject.metaData.addProperty('text', 'choices:itemvalues');\n        Survey.JsonObject.metaData.addProperty('text', {\n            name: 'choicesByUrl:restfull',\n            className: 'ChoicesRestfull',\n            onGetValue(obj) {\n                return obj && obj.choicesByUrl && obj.choicesByUrl.getData();\n            },\n            onSetValue(obj, value) {\n                if (!obj.choicesByUrl) {\n                    obj.choicesByUrl = new Survey.ChoicesRestfull();\n                }\n                obj.choicesByUrl.setData(value);\n            }\n        });\n    },\n\n    afterRender(question, el) {\n        let $el = $(el).is('input') ? $(el) : $(el).find('input');\n\n        $el.autocomplete({\n            appendTo: $('.sv_main'),\n            classes: {\n                'ui-autocomplete': 'sv_q_text_root',\n            },\n            source: (question.choices || []).map(it => it.text),\n        });\n    },\n\n    willUnMount(question, el) {\n        let $el = $(el).is('input') ? $(el) : $(el).find('input');\n\n        $el.autocomplete('destroy');\n    },\n}\n","import debug from 'debug';\n\nimport * as Survey from 'survey-react';\n\nimport $ from 'jquery';\nimport 'select2';\nimport 'select2/dist/css/select2.min.css';\n\nimport './select2.scss';\n\nlet info = debug('contxt:tagbox');\n\nexport default {\n    name: 'tagbox',\n    title: 'Tag box',\n    iconName: 'icon-tagbox',\n    widgetIsLoaded: function() {\n        return typeof $ == 'function' && !!$.fn.select2;\n    },\n    defaultJSON: {\n        choices: ['Item 1', 'Item 2', 'Item 3']\n    },\n    htmlTemplate: '<select multiple=\"multiple\" style=\"width: 100%;\"></select>',\n    isFit: function(question) {\n        return question.getType() === 'tagbox';\n    },\n    activatedByChanged: function(activatedBy) {\n        Survey.JsonObject.metaData.addClass(\n            'tagbox',\n            [\n                {\n                    name: 'hasOther',\n                    visible: false\n                }\n            ],\n            null,\n            'checkbox'\n        );\n        Survey.JsonObject.metaData.addProperty('tagbox', {\n            name: 'select2Config',\n            default: null\n        });\n        Survey.JsonObject.metaData.addProperty('tagbox', {\n            name: 'placeHolder',\n            default: null\n        });\n        Survey.matrixDropdownColumnTypes.tagbox = {\n            properties: [\n                'choices',\n                'choicesOrder',\n                'choicesByUrl',\n                'optionsCaption',\n                'otherText',\n                'choicesVisibleIf'\n            ]\n        };\n    },\n    fixStyles: function(el) {\n        let e = el.parentElement.querySelector('.select2-search__field');\n        if (e) {\n            e.style.border = 'none';\n        }\n    },\n    afterRender: function(question, el) {\n        var self = this;\n        var settings = {\n            tags: true,\n            disabled: question.isReadOnly,\n            placeholder: question.placeHolder,\n            theme: 'material',\n            tokenSeparators: [','],\n            ...question.select2Config,\n        };\n        var $el = $(el).is('select') ? $(el) : $(el).find('select');\n        $el.select2(settings);\n\n        self.fixStyles(el);\n\n        var updateValueHandler = function() {\n            (question.value || []).forEach(it => {\n                if ($el.find(`option[value=\"${it}\"]`).length === 0) {\n                    let option = new Option(it, it, true, true);\n                    $el.append(option).trigger('change');\n                }\n            });\n            $el.val(question.value).trigger('change');\n            self.fixStyles(el);\n        };\n        var updateChoices = function() {\n            $el.select2().empty();\n\n            if (settings.ajax) {\n                $el.select2(settings);\n            } else {\n                settings.data = question.visibleChoices.map(function(choice) {\n                    return {\n                        id: choice.value,\n                        text: choice.text\n                    };\n                });\n                $el.select2(settings);\n            }\n\n            updateValueHandler();\n        };\n\n        question.readOnlyChangedCallback = function() {\n            $el.prop('disabled', question.isReadOnly);\n        };\n        question.registerFunctionOnPropertyValueChanged(\n            'visibleChoices',\n            function() {\n                updateChoices();\n            }\n        );\n        question.valueChangedCallback = updateValueHandler;\n        let setValue = function(e) {\n            info('setValue %o', e);\n\n            let val = $el.select2('data').map(it => it.id);\n            val.forEach(val => {\n                // Add choice if it does not exist\n                if (!question.choices.some(choice => choice.value === val)) {\n                    let choice = new Survey.ItemValue(e.params.data.id);\n                    question.choices.push(choice);\n                }\n            });\n\n            question.value = val;\n        };\n        $el.on('select2:select', setValue);\n        $el.on('select2:unselect', setValue);\n        updateChoices();\n    },\n    willUnmount: function(question, el) {\n        $(el)\n            .find('select')\n            .off('select2:select')\n            .select2('destroy');\n        question.readOnlyChangedCallback = null;\n    }\n};\n\n","import isEmpty from 'lodash.isempty';\n\n// Function to decide if value constitutes an answered question\nexport default function unanswered(value) {\n    if (typeof value === 'object') {\n        return isEmpty(value) || (value.every && value.every(isEmpty));\n    } else {\n        return value === undefined || value === '';\n    }\n}\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\n// TODO: Handle this without having mui stuff in this class??\nimport {ThemeProvider} from '@material-ui/styles';\n\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport {withTheme} from '@material-ui/core/styles';\n\nimport debug from 'debug';\n\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\n\nimport classNames from 'classnames';\nimport Pica from 'pica';\n\nimport surveyModel from './surveyModel';\n\nimport acwidget from './autocompleteWidget';\nimport tbwidget from './tagboxWidget';\n\nimport unanswered from './unanswered';\n\nSurvey.CustomWidgetCollection.Instance.addCustomWidget(acwidget, 'property');\nSurvey.CustomWidgetCollection.Instance.addCustomWidget(tbwidget, 'customtype');\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'cerebralbutton',\n});\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'autofill',\n    default: false,\n});\n\n// Override imageWidth for file questions\nSurvey.JsonObject.metaData.addProperty('file', {\n    name: 'imageWidth',\n    default: '100%',\n});\n\nlet pica = new Pica();\n\nconst info = debug('contxt:survey');\ninfo.log = console.info.bind(console);\n\nlet loggers = {};\nfunction logCB() {\n    let [name, ...rest] = arguments;\n\n    let logger = loggers[name] || info.extend(name);\n    loggers[name] = logger;\n\n    return logger(...rest);\n}\n\nclass Questions extends Component {\n    componentWillMount() {\n        const {get, theme} = this.props;\n\n        // Apply MUI theme to survey\n        const {palette} = theme;\n        let themeColors = Survey.StylesManager.ThemeColors['default'];\n        themeColors['$main-color'] = palette.primary.main;\n        themeColors['$main-hover-color'] = palette.primary.dark;\n        themeColors['$text-color'] = palette.text.primary;\n        themeColors['$header-color'] = palette.secondary.main;\n        themeColors['$border-color'] = palette.divider;\n        themeColors['$header-background-color'] = palette.secondary.main;\n        themeColors['$body-background-color'] = palette.background.paper;\n        themeColors['$body-container-background-color'] = palette.background.paper;\n        themeColors['$inputs-background-color'] = palette.background.default;\n        themeColors['$error-color'] = palette.error.main;\n        themeColors['$error-background-color'] = palette.error.light;\n        Survey.StylesManager.applyTheme('default');\n\n        this.model = new Survey.Model(this.props.questions);\n        surveyModel.model = this.model;\n\n        // TODO: I'm sure this is isn't right with cerebral..\n        let data = get(state`surveyData`);\n        if (data) {\n            this.model.data = data;\n        }\n        let pageNum = get(state`pageNum`);\n        if (pageNum !== undefined) {\n            this.model.currentPageNo = pageNum;\n        }\n\n        this.props.reaction('changePage',\n            {\n                pageNum: state`pageNum`,\n            },\n            ({pageNum}) => this.model.currentPageNo = pageNum\n        );\n        this.props.reaction('changeData',\n            {\n                data: state`surveyData`,\n            },\n            ({data}) => this.model.data = data\n        );\n        this.props.reaction('changeQuestions',\n            {\n                questions: state`questions`,\n            },\n            ({questions}) => {\n                this.model = new Survey.Model(questions);\n                surveyModel.model = this.model;\n            }\n        );\n\n        this.updatePages(this.model);\n        this.props.setData({data: this.model.data});\n    }\n\n    updatePages(survey) {\n        this.props.setPages({\n            pages: survey.visiblePages.map((page) => ({\n                error: page.hasErrors(false, false),\n                name: page.name,\n                title: page.title,\n            }))\n        });\n    }\n\n    render() {\n        const {get, theme, classes={}, ...props} = this.props;\n\n        return (\n            <Survey.Survey\n                {...props}\n                model={this.model}\n                onCurrentPageChanged={(survey) => {\n                    logCB('onCurrentPageChanged', `${survey.currentPageNo}`);\n\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\n                        props.setPage({pageNum: survey.currentPageNo});\n                    }\n                }}\n                onUpdateQuestionCssClasses={\n                    (survey, {question, cssClasses}) => {\n                        logCB('onUpdateQuestionCssClasses',\n                                `${question.name}=%o`, cssClasses);\n\n                        // TODO: Support more CSS stuff?\n                        cssClasses.preview =\n                            classNames(cssClasses.preview, classes.ssPreview);\n                    }\n                }\n                onPageVisibleChanged={this.updatePages.bind(this)}\n                onPageAdded={this.updatePages.bind(this)}\n                onUploadFiles={async (survey, {files, callback}) => {\n                    logCB('onUploadFiles', `%o`, files);\n\n                    // TODO: Support multiple files?\n                    let file = files[0];\n\n                    let res = await props.upload({file});\n\n                    callback('success', [{\n                        file,\n                        content: res.url,\n                    }]);\n                }}\n                onValueChanging={(survey, {question, name, oldValue, value}) => {\n                    logCB('onValueChanging', `%o ${name}=%o`, oldValue, value);\n\n                    return;\n                    if (question instanceof Survey.QuestionFileModel) {\n                        (value || []).forEach((file, i) => {\n                            if (!(file && file.content) || file.converted) {\n                                return;\n                            }\n\n                            let img = new Image();\n                            img.src = file.content;\n                            let canvas = document.createElement('canvas');\n                            // TODO: Too small, need to upload to photos etc...\n                            canvas.width = 150;\n                            // Maintain aspect ratio\n                            canvas.height =\n                                img.height * canvas.width / img.width;\n\n                            const options = {\n                                unsharpAmount: 80,\n                                unsharpRadius: 0.6,\n                                unsharpThreshold: 2,\n                            };\n                            pica.resize(img, canvas, options).then(() => {\n                                let resized = {\n                                    name: file.name,\n                                    content: canvas.toDataURL(),\n                                    type: 'image/png',\n                                    converted: true\n                                };\n\n                                // You have to reassign question.value\n                                // Stuff breaks if you assign question.value[i]\n                                let value = question.value;\n                                question.value = [];\n                                value[i] = resized;\n                                question.value = value;\n                            });\n                        });\n                    }\n                }}\n                onValueChanged={(survey, {name, value, question}) => {\n                    logCB('onValueChanged', `%o=%o`, question, value);\n\n                    props.setData({data: survey.data, name, value});\n                    // No idea why, but cerebral freaks out if I call this\n                    // without the setTimeout...\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                onMatrixRowAdded={(survey, {question, rowIndex}) => {\n                    logCB('onMatrixRowAdded', '%d %o', rowIndex, question);\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                onMatrixRowRemoved={(survey, {question, rowIndex}) => {\n                    logCB('onMatrixRowRemoved', '%d %o', rowIndex, question);\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                onDynamicPanelItemValueChanged={\n                    (survey, {question, value, itemIndex, itemValue}) => {\n                        logCB('onDynamicPanelItemValueChanged', `%o=%o %o=%o`,\n                                question, value, itemIndex, itemValue);\n                    }\n                }\n                onMatrixCellValueChanged={\n                    (survey, {question, value, columnName, row}) => {\n                        logCB('onMatrixCellValueChanged', `%o=%o %s %s`,\n                                question, value, columnName, row);\n                    }\n                }\n                onValidateQuestion={\n                    (survey, {question, name, value, error}) => {\n                        logCB('onValidateQuestion', '%o %s %s %s',\n                                question, name, value, error);\n                    }\n                }\n                completedHtml={\n                    ReactDOMServer.renderToString(\n                        <ThemeProvider theme={theme}>\n                            props.completedHtml\n                        </ThemeProvider>\n                    )\n                }\n                onQuestionAdded={(survey, options) => {\n                    logCB('onQuestionAdded', '%o', options);\n                }}\n                onAfterRenderQuestion={\n                    async (survey, {question, htmlElement}) => {\n                        logCB('onAfterRenderQuestion', '%o', question);\n\n                        /*\n                        if (question.autocomplete) {\n                            question.choices = [\n                                new Survey.ItemValue('foo'),\n                                new Survey.ItemValue('bar'),\n                            ];\n                        }*/\n\n                        let {autofill} = question;\n                        // Try to autofill if unanswered\n                        if (unanswered(question.value) && autofill) {\n                            if (typeof autofill === 'function') {\n                                question.value = await autofill(question);\n                            } else {\n                                let seq = await props.autofill({\n                                    // TODO: How to handle dynamic questions?\n                                    question: question.name,\n                                    autofill,\n                                });\n                                question.value = seq && seq.answer;\n                            }\n                        }\n\n                        if (question.cerebralbutton) {\n                            let seq = get(sequences`${question.cerebralbutton}`);\n                            ReactDOM.render(\n                                <ThemeProvider theme={theme}>\n                                    <Button onClick={() => seq()}>\n                                        {question.title}\n                                    </Button>\n                                </ThemeProvider>\n                            , htmlElement);\n                        }\n                    }\n                }\n            />\n        );\n    }\n}\n\nexport default connect(\n    {\n        questions: state`questions`,\n        init: sequences`initSurvey`,\n        data: state`surveyData`,\n        setData: sequences`setSurveyData`,\n        setPage: sequences`setSurveyPage`,\n        currentPageNo: state`pageNum`,\n        setPages: sequences`setPages`,\n        autofill: sequences`autofill`,\n        upload: sequences`uploadScreenshot`,\n    },\n    withTheme(Questions)\n);\n\n","// MUI styles for all the things\n// TODO: Is this a good way to do this stuff??\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    content: {\n        textAlign: 'center',\n        flexGrow: 1,\n        alignSelf: 'center',\n        maxWidth: 800,\n    },\n    appBar: {\n        top: 0,\n        bottom: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    bottomBar: {\n        bottom: 0,\n        top: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    ssPreview: {\n        width: '95%',\n    },\n});\n\nexport default styles;\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport {withStyles} from '@material-ui/styles';\n\nimport styles from './styles';\n\nfunction PagesDrawer(props) {\n    const {classes} = props;\n\n    const contents = (\n        <div>\n            <Toolbar>\n                <Typography\n                    variant='h6'\n                    color='primary'\n                    align='center'\n                    className={classes.grow}\n                    noWrap\n                >\n                    Pages\n                </Typography>\n            </Toolbar>\n            <Divider />\n            <List>\n                {props.pages.map(({name, title, error}, pageNum) => (\n                    <ListItem\n                        key={name}\n                        button\n                        selected={pageNum === props.pageNum}\n                        className={error ? 'page-err' : 'page-complete'}\n                        onClick={()=>props.setSurveyPage({pageNum})}>\n                        <ListItemIcon>\n                            {error ? <WarningIcon color='error'/> : <DoneIcon />}\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={title}\n                            secondary={error ? 'Incomplete' : 'Complete'}\n                            secondaryTypographyProps={{\n                                color: error ? 'error' : 'textSecondary',\n                            }}\n                        />\n                    </ListItem>\n                ))}\n            {props.readme && <>\n                <Divider />\n                <ListItem\n                    component={Link}\n                    target='_blank'\n                    href={props.readme}\n                >\n                <ListItemText\n                    primary='Readme'\n                />\n                </ListItem>\n            </>}\n            </List>\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer}>\n            <Hidden {...props.permScreens} implementation='js'>\n                <SwipeableDrawer\n                    open={props.navigationOpen}\n                    onOpen={()=>props.showNavigation()}\n                    onClose={()=>props.hideNavigation()}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden {...props.tempScreens} implementation='js'>\n                <Drawer\n                    variant='permanent'\n                    open\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n}, withStyles(styles)(PagesDrawer));\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\n\nfunction ConfirmSubmitDialog(props) {\n    const handleClose = props.confirm;\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                Successfully submitted metadata\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {'Your metadata have been uploaded '}\n                    <Link target='_blank' href={props.resultsUrl}>\n                        here.\n                    </Link>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color='primary' autoFocus>\n                    OK\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default connect({\n    open: state`confirmSubmitOpen`,\n    resultsUrl: state`resultsUrl`,\n    confirm: sequences`confirmSubmit`,\n}, ConfirmSubmitDialog);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction DebugButton(props) {\n    let button = (\n        <Button\n            aria-owns='debug-menu'\n            aria-haspopup='true'\n            onClick={() => props.setState({open: true})}\n            color='inherit'\n        >\n            {process.env.REACT_APP_GIT}\n        </Button>\n    );\n    return (\n        <div>\n            {button}\n            <Menu\n                id='debug-menu'\n                //anchorEl={button}\n                open={props.open || false}\n                onClose={() => props.setState({open: false})}\n            >\n                <MenuItem onClick={() => props.submitResults()}>\n                    Force Submit\n                </MenuItem>\n                <MenuItem onClick={() => props.disconnect()}>\n                    Disconnect Google\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\nexport default connect({\n    open: state`debugMenuOpen`,\n    setState: sequences`setDebugMenuOpen`,\n    submitResults: sequences`submitResults`,\n    disconnect: sequences`disconnectGoogle`,\n}, DebugButton);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction ErrorDisplay({classes={}, error, close}) {\n    return (\n        <Snackbar\n            open={!!error}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}>\n            <SnackbarContent\n                className={classes.error}\n                aria-describedby='client-snackbar'\n                message={\n                    <span id='client-snackbar' className={classes.root}>\n                        <ErrorIcon\n                            className={\n                                classNames(classes.iconVariant, classes.icon)\n                            }\n                        />\n                        {error && (error.name + ': ' + error.message)}\n                    </span>\n                }\n                action={[\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        onClick={close}\n                                        >\n                        <CloseIcon className={classes.icon}/>\n                    </IconButton>,\n                ]}\n            />\n        </Snackbar>\n    );\n}\n\nexport default connect({\n    error: state`error`,\n    close: sequences`clearError`,\n}, ErrorDisplay);\n","export default [\n    'https://www.googleapis.com/auth/drive.appdata',\n    'https://www.googleapis.com/auth/drive.file',\n].join(' ');\n","/* eslint import/no-webpack-loader-syntax: off */\nimport describe from 'aot-loader!./describe-loader';\n\nexport default describe;\n","export default {\"dirty\":false,\"raw\":\"v0.4.0-8-ge17dc0e\",\"hash\":\"ge17dc0e\",\"distance\":8,\"tag\":\"v0.4.0\",\"semver\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"v0.4.0\",\"major\":0,\"minor\":4,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"0.4.0\"},\"suffix\":\"8-ge17dc0e\",\"semverString\":\"0.4.0+8.ge17dc0e\"}","import React, {Component} from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport {withStyles} from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport {ThemeProvider} from '@material-ui/styles';\nimport gold from '@material-ui/core/colors/amber';\n\n// Has to be last mui import\nimport Box from '@material-ui/core/Box';\n\nimport DocumentMeta from 'react-document-meta';\nimport HttpsRedirect from 'react-https-redirect';\nimport queryString from 'query-string';\n\nimport './App.css';\nimport QRDialog from './QRDialog';\nimport Questions from './Questions';\nimport PagesDrawer from './PagesDrawer';\nimport ConfirmSubmitDialog from './ConfirmSubmitDialog';\nimport DebugButton from './DebugButton';\nimport ErrorDisplay from './ErrorDisplay';\n\nimport styles from './styles';\nimport scope from './googleScopes';\nimport describe from './describe';\n\nconst version = describe.semverString;\nconst meta = {\n    title: `${process.env.REACT_APP_NAME} ${version}`,\n    meta: {\n        'ui-version': version,\n    },\n};\n\n// Parse query string\nconst params = queryString.parse(window.location.search);\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n    palette: {\n        type: params.theme || 'dark',\n        primary: gold,\n    },\n});\n\nconst README_URL = 'https://docs.google.com/document/d/' +\n        '1wkG-bEYFyqxV-SmYoQmgLTJ1m1pvPvXlnTTnjh60ZFY/edit?usp=sharing';\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    //deferredPrompt = e;\n    if (params.install !== undefined) {\n        e.prompt(); // TODO: Don't show prompt immediately?\n    }\n});\n\nconst App = withStyles(styles)(class App extends Component {\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        let {props} = this;\n        const {classes} = props;\n\n        return (\n            <div className={classes.root}>\n                <PagesDrawer\n                    classes={classes}\n                    // Screens sizes to show permanent drawer\n                    permScreens={{smUp: true}}\n                    // Screens sizes to show temporary drawer\n                    tempScreens={{xsDown: true}}\n                    readme={README_URL}\n                />\n                <AppBar position='fixed' className={classes.appBar}>\n                    <Toolbar>\n                        {params.debug !== undefined &&\n                            // Super secret debug button\n                            <DebugButton />\n                        }\n                        <IconButton\n                            className={classes.menuButton}\n                            color='inherit'\n                            onClick={() => props.showNavigation()}\n                            aria-label='Pages'>\n                            <MenuIcon\n                            />\n                        </IconButton>\n                        <Button\n                            color='inherit'\n                            disabled={!props.canSubmit}\n                            onClick={() => props.submit()}>\n                            Submit\n                            <SendIcon />\n                        </Button>\n                        <div className={classes.grow} />\n                        <div className='g-signin2'\n                            data-theme='dark'\n                            data-scope={scope}\n                        />\n                    </Toolbar>\n                </AppBar>\n                <QRDialog\n                    open={props.droneQRScannerActive}\n                    onClose={props.hideDroneQRScanner}\n                />\n                <QRDialog\n                    open={props.sensorQRScannerActive}\n                    onClose={props.hideSensorQRScanner}\n                />\n                <ConfirmSubmitDialog classes={classes} />\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    { props.initialized && (props.loggedin ?\n                        <Questions\n                            classes={classes}\n                            isSinglePage={params.singlePage !== undefined}\n                            completedHtml={(\n                                <div>\n                                    <Typography color='inherit' >\n                                        Submitting Metadata\n                                    </Typography>\n                                    <Box p={4} >\n                                        <CircularProgress size={100} />\n                                    </Box>\n                                </div>\n                            )}\n                            onComplete={({data}) => props.submitResults()}\n                        />\n                        :\n                        <Box p={4} >\n                            <Typography color='inherit' >\n                                Please sign in to continue.\n                            </Typography>\n                        </Box>\n                    )}\n                    <div className={classes.toolbar} />\n                </main>\n                <ErrorDisplay classes={classes} />\n                <AppBar position='fixed' className={classes.bottomBar}>\n                    <MobileStepper\n                        steps={props.pages.length}\n                        position='static'\n                        activeStep={props.pageNum}\n                        className={classes.mobileStepper}\n                        nextButton={\n                            props.pageNum === props.pages.length - 1 ?\n                                <Button\n                                    color='primary'\n                                    disabled={!props.canSubmit}\n                                    onClick={() => props.submit()}>\n                                    Sumbit\n                                    <SendIcon />\n                                </Button>\n                                :\n                                <Button\n                                    color='primary'\n                                    disabled={!props.canNext}\n                                    onClick={() => props.goNextPage()}>\n                                    Next\n                                    <NavigateNextIcon />\n                                </Button>\n                        }\n                        backButton={\n                            <Button\n                                color='primary'\n                                disabled={!props.canPrev}\n                                onClick={() => props.goPreviousPage()}>\n                                <NavigateBeforeIcon />\n                                Previous\n                            </Button>\n                        }\n                    />\n                </AppBar>\n            </div>\n        );\n    }\n});\n\nfunction AppContainer(props) {\n    return (\n        <HttpsRedirect>\n            <ThemeProvider theme={theme}>\n                <DocumentMeta {...meta} />\n                <React.Fragment>\n                    <CssBaseline />\n                    <App {...props} />\n                </React.Fragment>\n            </ThemeProvider>\n        </HttpsRedirect>\n    );\n}\n\nexport default connect({\n    initialized: state`initialized`,\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n    loggedin: state`loggedin`,\n    login: sequences`login`,\n    logout: sequences`logout`,\n    google: state`google`,\n    createSheet: sequences`createSheet`,\n    submitResults: sequences`submitResults`,\n    canSubmit: state`canSubmit`,\n    canNext: state`canNext`,\n    canPrev: state`canPrev`,\n}, AppContainer);\n","import {Reaction} from 'cerebral';\nimport {state, moduleState, props, sequences} from 'cerebral/tags'\nimport {set, merge, when, parallel} from 'cerebral/factories';\n\nimport ls from 'local-storage';\n\nexport default (paths) => ({\n    providers: {\n        localstore: {\n            get(key) {\n                return ls.get(key);\n            },\n\n            set(key, val) {\n                return ls.set(key, val);\n            },\n\n            clear(key) {\n                return ls.remove(key);\n            },\n        },\n    },\n\n    state: {\n        initialized: false,\n    },\n\n    sequences: {\n        persistState: [\n            when(moduleState`initialized`), // Wait for init?\n            {\n                true: ({localstore, props}) => {\n                    let {key, val} = props;\n                    return {success: localstore.set(key, val)};\n                },\n                false: [],\n            },\n        ],\n        clear: [\n            parallel('clear paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.clear(path)}),\n            ])),\n        ],\n        init: [\n            // Load each path from store and set it in state\n            parallel('get paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.get(path)}),\n                when(props`val`, val => val === null),\n                {\n                    true: [], // Ignore null/unset keys\n                    false: [\n                        when(props`val`, val => typeof val === 'object'),\n                        {\n                            true: [merge(state`${path}`, props`val`)],\n                            false: [set(state`${path}`, props`val`)],\n                        }\n                    ],\n                }\n            ])),\n            set(moduleState`initialized`, true),\n        ],\n    },\n\n    // Generate a reaction for each path in the store\n    reactions: paths.map(path => {\n        let reaction = Reaction(\n            {\n                val: state`${path}`,\n            },\n            // TODO: Why didn't using moduleSequences work??\n            //({val, get}) => get(moduleSequences`persistState`)({key: path, val})\n            ({val, get}) => {\n                const name = reaction.modulePath.join('.');\n                const sequence = get(sequences`${name}.persistState`);\n                return sequence({key: path, val});\n            }\n        );\n        return {[path]: reaction};\n    }).reduce((obj, reaction) => Object.assign(obj, reaction), {}),\n});\n","import Promise from 'bluebird'\n//import {state} from 'cerebral';\nimport googleapi from 'google-client-api'\nimport XLSX from 'xlsx'\nimport axios from 'axios'\nimport ducky from 'ducky'\n\nimport * as errors from './errors'\nimport model from '../surveyModel'\nimport scope from '../googleScopes'\n\nimport describe from '../describe'\n\nexport const geolocation = {\n    async getCurrentLoc () {\n        try {\n            return await new Promise((resolve, reject) =>\n                navigator.geolocation.getCurrentPosition(resolve, reject)\n            ).then(pos => pos.coords)\n        } catch (err) {\n            let msg\n\n            switch (err.code) {\n                case 1: // PERMISSION_DENIED\n                    msg = 'Permission denied'\n                    break\n                case 2: // POSITION_UNAVAILABLE\n                    msg = 'Position unavailable'\n                    break\n                case 3: // TIMEOUT\n                    msg = 'Timeout obtaining position'\n                    break\n                default:\n                    msg = 'Unknown error'\n            }\n\n            throw new errors.GetLocationError(msg)\n        }\n    }\n}\n\nexport const survey = {\n    setAnswer (name, value) {\n        model.model.setValue(name, value)\n    },\n\n    setPage (num) {\n        model.model.currentPageNo = num\n    },\n\n    nextPage () {\n        return model.model.nextPage()\n    },\n\n    previousPage () {\n        return model.model.prevPage()\n    },\n\n    setData (data) {\n        model.model.data = data\n    },\n\n    submit () {\n        return model.model.completeLastPage()\n    }\n}\n\nlet gapi\nexport const gapiClient = {\n    // Do one-time gapi setup not effected by login/logout\n    async init ({ login, logout }) {\n        gapi = Promise.resolve(googleapi())\n            // Load client library\n            .tap(\n                ({ load }) =>\n                    new Promise((resolve, reject) =>\n                        load('client', {\n                            callback: resolve,\n                            onerror: reject,\n                            timeout: 10000,\n                            ontimeout: reject\n                        })\n                    )\n            )\n            // Initialize client (load sheets and drive APIs)\n            .tap(({ client }) =>\n                client.init({\n                    discoveryDocs: [\n                        'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n                        'https://sheets.googleapis.com/$discovery/rest?version=v4'\n                    ],\n                    scope\n                })\n            )\n            // Listen for login/logout\n            .tap(({ auth2 }) => {\n                let auth = auth2.getAuthInstance()\n                let listener = signedIn => {\n                    if (!signedIn) {\n                        logout && this.context.get(logout)()\n                    } else {\n                        let user = auth.currentUser.get().getBasicProfile()\n                        login &&\n                            this.context.get(login)({\n                                name: user.getName()\n                            })\n                    }\n                }\n\n                auth.isSignedIn.listen(listener)\n                listener(auth.isSignedIn.get())\n            })\n        await gapi\n    },\n\n    async get (/*scope*/) {\n        // TODO: Fix/remove code for incremental scopes?\n        return gapi\n            .tap(({ auth2 }) => {\n                let user = auth2.getAuthInstance().currentUser.get()\n\n                // Request needed scopes from user\n                if (!user.hasGrantedScopes(scope)) {\n                    return user.grant({ scope })\n                }\n            })\n            .get('client')\n    },\n\n    async disconnect () {\n        ;(await gapi).auth2\n            .getAuthInstance()\n            .currentUser.get()\n            .disconnect()\n    }\n}\nconst appdataScope = [\n    'https://www.googleapis.com/auth/drive.appdata'\n    //'https://www.googleapis.com/auth/drive.file',\n].join(' ')\nexport const googleappdata = {\n    async getData () {\n        let { drive } = await this.context.gapiClient.get(appdataScope)\n\n        let result\n        try {\n            ;({ result } = await drive.files.list({\n                spaces: 'appDataFolder',\n                q: \"name='config.json'\",\n                fields: 'files(id, appProperties)'\n            }))\n        } catch (err) {\n            throw new errors.GAPIError(err)\n        }\n\n        let file = result.files[0] || {}\n        return {\n            data: file.appProperties,\n            id: file.id\n        }\n    },\n\n    async initData ({ body = {} }) {\n        let { drive } = await this.context.gapiClient.get(appdataScope)\n\n        try {\n            let { result } = await drive.files.create({\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    parents: ['appDataFolder'],\n                    appProperties: body,\n                    fields: 'id'\n                }\n            })\n            return result.id\n        } catch (err) {\n            throw new errors.GAPIError(err)\n        }\n    },\n\n    async updateData ({ body = {}, id }) {\n        let { drive } = await this.context.gapiClient.get(appdataScope)\n\n        try {\n            let { result } = await drive.files.update({\n                fileId: id,\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    appProperties: body\n                }\n            })\n            return result\n        } catch (err) {\n            throw new errors.GAPIError(err)\n        }\n    }\n}\nconst sheetsScope = 'https://www.googleapis.com/auth/drive.file'\n// Decide sheet version based on semver\nconst { semver } = describe\nconst sheetVer = semver.major || semver.minor / 10\nexport const googlesheets = {\n    async createSheet () {\n        let { sheets } = await this.context.gapiClient.get(sheetsScope)\n\n        const ver = googlesheets.getVersion()\n        const properties = {\n            title: `${process.env.REACT_APP_NAME} metadata uploads v${ver}`\n        }\n        try {\n            let { result } = await sheets.spreadsheets.create({ properties })\n            return result\n        } catch (err) {\n            throw new errors.GAPIError(err)\n        }\n    },\n\n    getVersion () {\n        return sheetVer\n    },\n\n    async getSheet (id) {\n        let { sheets } = await this.context.gapiClient.get(sheetsScope)\n\n        let result\n        try {\n            ;({ result } = await sheets.spreadsheets.values.get({\n                spreadsheetId: id,\n                range: ['Sheet1']\n            }))\n        } catch (err) {\n            throw new errors.GAPIError(err)\n        }\n\n        if (!result.values) {\n            return []\n        }\n\n        let sheet = XLSX.utils.aoa_to_sheet(result.values)\n        return XLSX.utils.sheet_to_json(sheet)\n    },\n\n    async writeSheet (id, data) {\n        const sheetsURL = 'https://docs.google.com/spreadsheets'\n        let { sheets } = await this.context.gapiClient.get(sheetsScope)\n\n        // Format data with spreadsheet lib\n        let sheet = XLSX.utils.json_to_sheet(data)\n        let values = XLSX.utils.sheet_to_json(sheet, { header: 1 })\n\n        try {\n            let { result } = await sheets.spreadsheets.values.update(\n                {\n                    spreadsheetId: id,\n                    range: sheet['!ref'],\n                    valueInputOption: 'USER_ENTERED', // 'RAW'\n                    includeValuesInResponse: false\n                },\n                {\n                    majorDimension: 'ROWS',\n                    values\n                }\n            )\n            let row = data.length + 1\n            return {\n                ...result,\n                // TODO: How to better handle URL from ID etc.?\n                resultsUrl: `${sheetsURL}/d/${id}#gid=0&range=${row}:${row}`\n            }\n        } catch (err) {\n            throw new errors.GAPIError(err)\n        }\n    },\n\n    async addRow (id, cols, row) {\n        let { sheets } = await this.context.gapiClient.get(sheetsScope)\n\n        return sheets.spreadsheets.values.append(\n            {\n                spreadsheetId: id,\n                valueInputOption: 'USER_ENTERED', // 'RAW'\n                insertDataOption: 'INSERT_ROWS', // 'OVERWRITE'\n                includeValuesInResponse: false\n            },\n            {\n                majorDimension: 'ROWS',\n                values: [row]\n            }\n        )\n    }\n}\nconst driveFilesUrl = 'https://www.googleapis.com/upload/drive/v3/files/'\nexport const googledrive = {\n    async upload (file) {\n        let { drive } = await this.context.gapiClient.get()\n\n        try {\n            let { result } = await drive.files.create({\n                resource: {\n                    name: file.name,\n                    mimeType: file.type\n                },\n                fields: 'id'\n            })\n\n            // TODO: You really can't sent the body with gapi??? wtf\n            let token = (await this.context.gapiClient.get()).getToken()\n            await fetch(driveFilesUrl + result.id, {\n                method: 'PATCH',\n                headers: new Headers({\n                    Authorization: `Bearer ${token['access_token']}`,\n                    'Content-Type': file.type\n                }),\n                body: file\n            })\n\n            return `https://docs.google.com/uc?export=download&id=${result.id}`\n        } catch (err) {\n            throw new errors.GAPIError(err)\n        }\n    }\n}\n\n// TODO: Better way to handle arrays and such in a spreadsheet?\nconst fileResult = ducky.validate.compile(\n    '[ { content: string, name: string, type: string } ]'\n)\nexport const serialize = {\n    serialize (data) {\n        return data.map((result, i) => {\n            let serialized = {}\n            Object.keys(result).forEach(key => {\n                try {\n                    if (typeof result[key] === 'object') {\n                        if (ducky.validate.execute(result[key], fileResult)) {\n                            /* TODO: Make IMAGE work in google sheets?\n                            serialized[key] =\n                                    `=IMAGE(\"${result[key][0].content}\",3)`;\n                            */\n                            serialized[key] = result[key][0].content\n                        } else if (result[key]) {\n                            let kkey = '$$' + key\n                            serialized[kkey] = JSON.stringify(result[key])\n                        }\n                    } else {\n                        serialized[key] = result[key]\n                    }\n                } catch (err) {\n                    throw new errors.SerializeError(i, key, err)\n                }\n            })\n            return serialized\n        })\n    },\n\n    deserialize (data) {\n        return data.map((result, i) => {\n            let deserialized = {}\n            Object.keys(result).forEach(key => {\n                try {\n                    if (key.startsWith('$$')) {\n                        if (result[key]) {\n                            let kkey = key.substring(2)\n                            deserialized[kkey] = JSON.parse(result[key])\n                        }\n                    } else {\n                        deserialized[key] = result[key]\n                    }\n                } catch (err) {\n                    // +2 is for header row and 1 vs 0 indexing\n                    throw new errors.DeserializeError(i + 2, key, err)\n                }\n            })\n            return deserialized\n        })\n    }\n}\n\n/**\n * @see {@link https://weatherstack.com/documentation#nodejs}\n */\nconst weatherstack = axios.create({\n    baseURL: 'http://api.weatherstack.com/',\n    method: 'get'\n})\nweatherstack.interceptors.request.use(({ params, ...rest }) => {\n    // Add default params to config\n    return {\n        params: {\n            access_key: process.env.REACT_APP_WEATHERSTACK_KEY,\n            units: 'f', // Use US customary units\n            ...params\n        },\n        ...rest\n    }\n})\nexport const weather = {\n    async current (query) {\n        const {\n            data: { current }\n        } = await weatherstack('/current', { params: { query } })\n        return current\n    }\n}\n","import {CerebralError} from 'cerebral';\n\nexport class GetLocationError extends CerebralError {\n    constructor(message) {\n        super(message);\n        this.name = 'GetLocationError';\n    }\n}\n\nexport class GAPIError extends CerebralError {\n    constructor(err) {\n        // gapi doesn't always throw the same sorts of things..\n        let error = err;\n        if (err.result && error.result.error) {\n            error = err.result.error;\n        }\n\n        super(error.message);\n        this.name = 'GAPIError';\n        this.result = error;\n    }\n}\n\nexport class SerializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error serializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n\nexport class DeserializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error deserializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n","import forIn from 'lodash.forin';\n\nimport {state} from 'cerebral/tags';\n\nexport function getCurrentLocation({geolocation}) {\n    return geolocation.getCurrentLoc()\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\n}\n\nexport function setAnswer({survey, props}) {\n    return survey.setAnswer(props.question, props.answer);\n}\nexport function setSurveyPage({survey, props}) {\n    return survey.setPage(props.pageNum);\n}\nexport function setSurveyData({survey, props}) {\n    return survey.setData(props.data);\n}\nexport function nextPage({survey}) {\n    return {error: survey.nextPage()};\n}\nexport function previousPage({survey}) {\n    return {error: survey.previousPage()};\n}\nexport function completeSurvey({survey, props}) {\n    return {done: survey.submit()};\n}\n\nexport async function initGapi({gapiClient, props}) {\n    return gapiClient.init(props);\n}\nexport async function disconnectGapi({gapiClient}) {\n    return gapiClient.disconnect();\n}\nexport async function createSheet({googlesheets}) {\n    let sheet = await googlesheets.createSheet();\n    return {sheet};\n}\nexport function getSheetVersion({googlesheets}){\n    let version = googlesheets.getVersion();\n    return {version};\n}\nexport async function initSheet({googlesheets, props}) {\n    let {result} = await googlesheets.createSheet();\n    await googlesheets.addRow(result.spreadsheetId, props.headerRow);\n}\nexport async function serializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.serialize(results)};\n}\nexport async function deserializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.deserialize(results)};\n}\nexport async function loadPastResults({googlesheets, path, props}) {\n    let {resultsId} = props;\n\n    try {\n        let results = (await googlesheets.getSheet(resultsId)) || [];\n\n        return path.found({results});\n    } catch (err) {\n        return path.notfound();\n    }\n}\nexport async function uploadResults({googlesheets, props}) {\n    let {results, resultsId} = props;\n\n    return googlesheets.writeSheet(resultsId, results);\n}\n\nexport async function createAppData({googleappdata, props}) {\n    let id = await googleappdata.initData(props);\n\n    return {id};\n}\nexport async function updateAppData({googleappdata, props}) {\n    let result = await googleappdata.updateData(props);\n\n    return {result};\n}\nexport async function loadAppData({googleappdata, path}) {\n    let {data, id} = await googleappdata.getData();\n\n    if (data) {\n        return path.found({body: data, id});\n    } else {\n        return path.notfound();\n    }\n}\n\nexport async function uploadScreenshot({googledrive, props}) {\n    let url = await googledrive.upload(props.file);\n\n    return {url};\n}\n\nexport async function getCurrentWeather({weather, props}) {\n    let query = props.latitude + ',' + props.longitude;\n    return await weather.current(query);\n}\n\nexport function getLastAnswer({get, props}) {\n    let {question} = props;\n\n    try {\n        let data = get(state`pastData`);\n\n        return {answer: data[data.length - 1][question]};\n    } catch (err) {\n        return {};\n    }\n}\n\nexport function initPages({get, store}) {\n    let pages = get(state`questions.pages`);\n\n    pages.forEach(page => {\n        forIn(page, function findKeys(val, key, obj) {\n            switch (key) {\n                case 'autocomplete':\n                    switch (val) {\n                        case 'previous':\n                            let {name} = obj;\n                            obj.choices = get(state`pastAnswers.${name}`);\n                            break;\n                        default:\n                    }\n                    break;\n                case 'previousAsChoices':\n                    if (val) {\n                        let {name, choices=[]} = obj;\n                        let previous = get(state`pastAnswers.${name}`) || [];\n                        previous.forEach(ans => {\n                            if (!choices.includes(ans)) {\n                                choices.push(ans);\n                            }\n                        });\n                        obj.choices = choices;\n                    }\n                    break;\n                default:\n                    if (typeof val === 'object') {\n                        forIn(val, findKeys);\n                    }\n            }\n        });\n    });\n\n    store.merge(state`questions`, {pages});\n}\n","import {set, unset, push, concat, when, equals} from 'cerebral/factories';\nimport {state, sequences, props} from 'cerebral/tags';\nimport * as actions from './actions';\n\nexport const init = [\n    set(props`login`, sequences`login`),\n    set(props`logout`, sequences`logout`),\n    actions.initGapi,\n    ({get}) => get(sequences`store.init`)(),\n    set(state`initialized`, true),\n];\n\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\nexport const showNavigation = [set(state`navigationOpen`, true)];\nexport const hideNavigation = [set(state`navigationOpen`, false)];\n\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\nexport const setAnswer = [actions.setAnswer];\nexport const setSurveyPage = [\n    set(state`pageNum`, props`pageNum`),\n];\nexport const setPages = [set(state`pages`, props`pages`)];\nexport const goNextPage = [\n    actions.nextPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num + 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const goPreviousPage = [\n    actions.previousPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num - 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const completeSurvey = [actions.completeSurvey];\nexport const setCurrentLocation = [\n    actions.getCurrentLocation,\n    set(props`locations`, state`surveyData.locations`),\n    // Using the push factory seems to break things...\n    ({props}) => ({locations: props.locations.concat(props.currentLoc)}),\n    set(props`question`, 'locations'),\n    set(props`answer`, props`locations`),\n    actions.setAnswer,\n];\n\n// Create a sheet and put corresponding appdata in props...\nconst createSheetWithAppData = [\n    actions.createSheet,\n    set(props`body`, {}),\n    set(props`body.resultsId`, props`sheet.spreadsheetId`),\n    // Only load results for the right version\n    // TODO: Support migrating sheets to higher versions?\n    ({props}) => ({\n        body: {[`resultsId-v${props.version}`]: props.body.resultsId}\n    }),\n];\n\nexport const loadappdata = [\n    actions.getSheetVersion,\n    actions.loadAppData,\n    {\n        found: [],\n        notfound: [\n            createSheetWithAppData,\n            actions.createAppData,\n        ],\n    },\n    ({props}) => ({\n        body: {resultsId: props.body[`resultsId-v${props.version}`]}\n    }),\n    set(state`resultsId`, props`body.resultsId`, id => id || ''),\n    set(state`appdataId`, props`id`),\n];\n\nexport const uploadScreenshot = [\n    actions.uploadScreenshot,\n];\n\n// Run _after_ login\nexport const login = [\n    when(state`loggedin`),\n    {\n        true: [], // Don't login multiple times?\n        false: [\n            set(state`loggedin`, true),\n            loadappdata,\n            set(props`resultsId`, state`resultsId`),\n            actions.loadPastResults,\n            {\n                found: [\n                    actions.deserializeResults,\n                    set(state`pastData`, props`results`),\n                ],\n                notfound: [\n                    createSheetWithAppData,\n                    set(state`resultsId`, props`sheet.spreadsheetId`),\n                    actions.updateAppData,\n                ],\n            },\n            actions.initPages,\n            set(state`loggedin`, props`name`, name => ({name})),\n        ],\n    },\n];\n// Runs _after_ logout\nexport const logout = [\n    set(state`loggedin`, false),\n    set(state`pastData`, []),\n];\n\nexport const disconnectGoogle = [actions.disconnectGapi];\n\nexport const createSheet = [actions.createSheet];\nexport const submitResults = [\n    set(state`submitting`, true),\n    when(state`loggedin`),\n    {\n        true: [],\n        false: login,\n    },\n    push(state`pastData`, state`surveyData`),\n    set(props`results`, state`pastData`),\n    actions.serializeResults,\n    set(props`resultsId`, state`resultsId`),\n    actions.uploadResults,\n    set(state`resultsUrl`, props`resultsUrl`),\n    set(state`confirmSubmitOpen`, true),\n    ({get}) => get(sequences`store.clear`)(),\n];\n\nexport const confirmSubmit = [\n    set(state`confirmSubmitOpen`, false),\n    () => window.location.reload(),\n];\n\nexport const setDebugMenuOpen = [set(state`debugMenuOpen`, props`open`)];\n\nexport const getCurrentLocationWeather = [\n    actions.getCurrentLocation,\n    set(props`latitude`, props`currentLoc.latitude`),\n    set(props`longitude`, props`currentLoc.longitude`),\n    actions.getCurrentWeather,\n];\n\nexport const autofill = [\n    when(\n        props`question`,\n        state`surveyData`,\n        (q, d) => d[q] !== null && d[q] !== undefined,\n    ),\n    {\n        true: [], // Don't autofill if already answered\n        false: [\n            equals(props`autofill`),\n            {\n                person: [set(props`answer`, state`loggedin.name`)],\n                // TODO: Combine lat/lon into one autofill?\n                latitude: [\n                    actions.getCurrentLocation,\n                    set(props`answer`, props`currentLoc.latitude`),\n                ],\n                longitude: [\n                    actions.getCurrentLocation,\n                    set(props`answer`, props`currentLoc.longitude`),\n                ],\n                location: [\n                    actions.getCurrentLocation,\n                    set(props`answer`, props`currentLoc`,\n                        ({latitude, longitude}) =>\n                            `${latitude},${longitude}`),\n                ],\n                // TODO: Combine weather autofills?\n                temperature: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`temperature`),\n                ],\n                windspeed: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`wind_speed`),\n                ],\n                winddirection: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`wind_dir`),\n                ],\n                lastused: [\n                    actions.getLastAnswer,\n                ],\n                otherwise: [],\n            },\n        ],\n    },\n];\n\nexport const displayError = [\n    ({error}) => console.error(error),\n    set(state`error`, props`error`),\n];\nexport const clearError =[unset(state`error`)];\n","import {state} from 'cerebral/tags';\n\nimport forin from 'lodash.forin';\nimport isequal from 'lodash.isequal';\n\nimport unanswered from '../unanswered';\n\nexport const canSubmit = get =>\n        get(state`initialized`) &&\n        get(state`loggedin`) &&\n        !get(state`submitting`) &&\n        !get(state`pages`).some(page => page.error);\n\nexport const canNext = get => {\n    let page = get(state`pageNum`);\n    let pages = get(state`pages`);\n\n    return page < (pages.length - 1) && !pages[page].error;\n};\n\nexport const canPrev = get => {\n    let page = get(state`pageNum`);\n\n    return page > 0;\n};\n\n// Compute previous answers\n// Sorted in reverse chronological order, unique answers only\nexport const pastAnswers = get => {\n    let data = get(state`pastData`);\n\n    let ans = {};\n    forin(data, row => forin(row, (val, key) => {\n        if (unanswered(val)) {\n            return;\n        }\n\n        if (Array.isArray(val)) {\n            return val.map(addAnswer);\n        } else {\n            return addAnswer(val);\n        }\n\n        function addAnswer(val) {\n            if (!ans[key]) {\n                ans[key] = [val];\n            } else if (!ans[key].some(ans => isequal(ans, val))) {\n                ans[key].unshift(val);\n            }\n        }\n    }));\n\n    return ans;\n};\n","import {DateTime} from 'luxon';\n\nexport default {\n    name: 'general',\n    title: 'General',\n    elements: [\n        {\n            name: 'jobname',\n            title: 'Job/Project name',\n            type: 'text',\n            autocomplete: 'previous',\n            choices: [\n                'Bob Ross',\n                'Rusty Shackleford',\n            ],\n        },\n        {\n            name: 'purpose',\n            title: 'Operation/Purpose',\n            type: 'dropdown',\n            choices: [\n                'UAV',\n                'Planting',\n                {\n                    value: 'Spraying',\n                    text: 'Spraying/Spreading',\n                },\n                'Tillage',\n                'Harvest',\n                {\n                    value: 'Anomalies',\n                    text: 'Anomaly Reporting',\n                },\n            ],\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'datetime',\n            title: 'Date/Time of data',\n            type: 'text',\n            inputType: 'datetime-local',\n            defaultValue: DateTime.local().toFormat(\"yyyy-MM-dd'T'HH:mm:ss\"),\n        },\n        {\n            type: 'panel',\n            elements: [\n                {\n                    // TODO: Support selecting region on a map\n                    name: 'locations',\n                    title: 'Collection locations',\n                    type: 'paneldynamic',\n                    panelCount: 1,\n                    minPanelCount: 1,\n                    panelAddText: 'Add Location',\n                    panelRemoveText: 'Remove Location',\n                    templateTitle: 'Location #{panelIndex}',\n                    templateElements: [\n                        {\n                            name: 'location',\n                            title: 'Lat/Lon or Label',\n                            type: 'text',\n                            autofill: 'location',\n                            isRequired: true,\n                        },\n                    ],\n                },\n                /*\n                {\n                    name: 'location-button',\n                    title: 'Add current location',\n                    type: 'html',\n                    cerebralbutton: 'setCurrentLocation',\n                },\n                */\n            ],\n        },\n    ]\n};\n","export default {\n    name: 'place',\n    title: 'Place',\n    elements: [\n        {\n            name: 'client',\n            title: 'Grower (or Client)',\n            type: 'text',\n            placeHolder: 'Farmer Frank',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'operation',\n            title: 'Farm (or Operation)',\n            type: 'text',\n            placeHolder: 'Frank Farms',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'site',\n            title: 'Field (or Site)',\n            type: 'text',\n            placeHolder: 'East Field',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'crop',\n            title: 'Crop',\n            type: 'text',\n            placeHolder: 'corn',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'prev-crop',\n            title: 'Previous Crop',\n            type: 'text',\n            placeHolder: 'beans',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'weather',\n            title: 'Weather',\n            type: 'panel',\n            elements: [\n                {\n                    name: 'weather-button',\n                    title: 'Get Current Weather',\n                    type: 'html',\n                    visible: false,\n                    // TODO: Implement functionality for button\n                    cerebralbutton: 'setCurrentWeather',\n                },\n                {\n                    name: 'temperature',\n                    title: 'Temperature (℉)',\n                    type: 'text',\n                    autofill: 'temperature',\n                    //inputType: 'number',\n                    placeHolder: '60 F'\n                },\n                {\n                    name: 'windspeed',\n                    title: 'Wind Speed (mph)',\n                    type: 'text',\n                    autofill: 'windspeed',\n                    //inputType: 'number',\n                    placeHolder: '10 mph',\n                },\n                {\n                    name: 'winddirection',\n                    title: 'Wind Direction',\n                    type: 'text',\n                    autofill: 'winddirection',\n                    //inputType: 'number',\n                    placeHolder: 'ENE',\n                },\n            ],\n        },\n    ],\n};\n","const anomalies = [\n    'Weather Event',\n    'Weed',\n    'Insect',\n    'Disease',\n    'Vertebrate',\n    'Nutrient Deficiency',\n    'Drainage Installation or Repair',\n];\n\nexport default {\n    name: 'anomalies',\n    visibleIf: '{purpose} == \"Anomalies\"',\n    title: 'Anomalies and Disorders',\n    elements: [\n        {\n            name: 'anomalies',\n            title: 'Anomalies',\n            type: 'matrixdynamic',\n            rowCount: 0,\n            addRowText: 'Add Anomaly',\n            removeRowText: 'Remove Anomaly',\n            columns: [\n                {\n                    name: 'type',\n                    title: 'Type',\n                    cellType: 'dropdown',\n                    isRequired: true,\n                    hasOther: true,\n                    choices: anomalies,\n                },\n                {\n                    name: 'what',\n                    title: 'What',\n                    cellType: 'text',\n                    isRequired: true,\n                },\n                {\n                    name: 'when',\n                    title: 'When',\n                    cellType: 'text',\n                    inputType: 'datetime-local',\n                    isRequired: true,\n                },\n                {\n                    name: 'extent',\n                    title: 'Extent',\n                    cellType: 'text',\n                    isRequired: true,\n                },\n            ],\n        },\n    ],\n};\n","export default {\n    name: 'harvest-conditions',\n    title: 'Crop Conditions',\n    visibleIf: '{purpose} == \"Harvest\"',\n    elements: [\n        {\n            name: 'harvest-conditions-moisture',\n            title: 'Grain Average Moisture (%)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n            placeHolder: '5 %',\n        },\n        {\n            name: 'harvest-conditions-anticipated-yield-avg',\n            title: 'Anticipated Yield Average (bu/ac)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n            placeHolder: '250 bu/ac',\n        },\n        {\n            name: 'harvest-conditions-lodging',\n            title: 'Lodging',\n            type: 'dropdown',\n            isRequired: true,\n            choices: [\n                'None',\n                'Slight',\n                'Moderate',\n                'Severe',\n            ],\n        },\n        {\n            name: 'harvest-conditions-grain-quality',\n            title: 'Grain Quality',\n            type: 'tagbox',\n            placeHolder: 'Add conditions',\n            isRequired: false,\n            choices: [\n                'Moldy',\n                'Splits',\n                'Grain Damage',\n                'High Foreign Matter',\n                'Sprouting Seeds',\n            ],\n            previousAsChoices: true,\n        },\n    ],\n};\n","export default {\n    name: 'harvest-transport',\n    title: 'Transport',\n    visibleIf: '{purpose} == \"Harvest\"',\n    elements: [\n        {\n            name: 'harvest-transport-cart',\n            title: 'Grain Cart?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'harvest-transport-cart-makemodel',\n            visibleIf: '{harvest-transport-cart} == true',\n            title: 'Grain Cart Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'harvest-transport-tractor-makemodel',\n            visibleIf: '{harvest-transport-cart} == true',\n            title: 'Tractor Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n    ],\n};\n","export default {\n    name: 'machinery',\n    title: 'Machinery',\n    visibleIf:\n        '[\"Planting\", \"Spraying\", \"Tillage\", \"Harvest\"] contains {purpose}',\n    elements: [\n        {\n            name: 'machinery-operator',\n            title: 'Operator',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-spray-or-spread',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Spray or Spread',\n            type: 'radiogroup',\n            choices: [\n                'Spraying',\n                'Spreading',\n            ],\n            isRequired: true,\n        },\n        {\n            name: 'machinery-pull-type',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Pull Type',\n            type: 'radiogroup',\n            choices: [\n                'Pull',\n                'Self-Propelled',\n            ],\n            isRequired: true,\n        },\n        {\n            name: 'machinery-makemodel',\n            // TODO: change title based on operation?\n            title: 'Machine Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'planter-makemodel',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Planter Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'planter-num-rows',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Number of Planter Rows',\n            type: 'text',\n            isRequired: true,\n            inputType: 'number',\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-implement',\n            title: 'Implement',\n            type: 'panel',\n            elements: [\n                {\n                    name: 'machinery-implement-type',\n                    visibleIf: '{purpose} == \"Tillage\"',\n                    title: 'Type',\n                    type: 'dropdown',\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new type',\n                    otherErrorText: 'Please enter the new type',\n                    autofill: 'lastused',\n                    autocomplete: 'previous',\n                },\n                {\n                    name: 'machinery-implement-makemodel',\n                    visibleIf: '{purpose} == \"Tillage\" or {machinery-pull-type} == \"Self-Propelled\"',\n                    title: 'Make and Model',\n                    type: 'dropdown',\n                    hideIfChoicesEmpty: false,\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new make and model',\n                    otherErrorText:\n                        'Please enter the new make and model',\n                    autofill: 'lastused',\n                    autocomplete: 'previous',\n                },\n            ],\n        },\n        {\n            name: 'machinery-calibration-report',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Calibration Report',\n            type: 'text',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-row-width',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Row Width (ft)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '3 ft',\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-width',\n            visibleIf: '[\"Spraying\", \"Tillage\"] contains {purpose}',\n            title: 'Width (ft)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '30 ft',\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-hearder-width',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Header Width (ft or rows)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '30 ft',\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-sprayer-type',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Type',\n            type: 'dropdown',\n            isRequired: true,\n            autofill: 'lastused',\n            choices: [\n                'Nozzles',\n                'Drop Tube',\n                'Spinner',\n            ],\n        },\n        {\n            name: 'machinery-rate',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Rate',\n            type: 'text',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-speed',\n            title: 'Speed (mph)',\n            type: 'text',\n            isRequired: true,\n            inputType: 'number',\n            placeHolder: '15 mph',\n        },\n        {\n            name: 'machinery-depth',\n            visibleIf: '[\"Planting\", \"Tillage\"] contains {purpose}',\n            title: 'Depth (in)',\n            type: 'text',\n            isRequired: true,\n            inputType: 'number',\n            placeHolder: '1.5 in',\n        },\n        {\n            name: 'machinery-yield-mapped',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Yield Mapped?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-yield-calibrated',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Yield Monitor Calibrated?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-controller-makemodel',\n            visibleIf: '[\"Planting\", \"Spraying\"] contains {purpose}',\n            title: 'Controller Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: false,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'machinery-variable-rate',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Variable Rate?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-variable-rate-source',\n            visibleIf:\n                '{purpose} == \"Spraying\" and {machinery-variable-rate} == true',\n            title: 'Variable Rate Source',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n        },\n    ],\n};\n","export default {\n    name: 'planting-chemicals',\n    title: 'Chemicals',\n    visibleIf: '{purpose} == \"Planting\"',\n    elements: [\n        {\n            name: 'planting-chemicals-starter',\n            title: 'Starter',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n        },\n        {\n            name: 'planting-chemicals-insectiside',\n            title: 'Insecticide',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n        },\n    ],\n};\n","export default {\n    name: 'planting-seed',\n    title: 'Seed',\n    visibleIf: '{purpose} == \"Planting\"',\n    elements: [\n        {\n            name: 'seed-brand',\n            title: 'Brand',\n            type: 'text',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n            isRequired: true,\n        },\n        {\n            name: 'seed-variety',\n            title: 'Variety',\n            type: 'text',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n            isRequired: true,\n        },\n        {\n            name: 'seed-treatments',\n            title: 'Treatments',\n            type: 'tagbox',\n            isRequired: true,\n            placeHolder: 'Choose Treatments',\n            previousAsChoices: true,\n        },\n        {\n            name: 'seed-population',\n            title: 'Population',\n            type: 'text',\n            inputType: 'number',\n            autofill: 'lastused',\n            isRequired: true,\n        },\n    ],\n};\n","export default {\n    name: 'spraying-chemicals',\n    title: 'Chemicals',\n    visibleIf: '{purpose} == \"Spraying\"',\n    elements: ['Herbicide', 'Insecticide', 'Fungicide', 'Fertilizer']\n        .map(chem => ({\n            name: `spraying-chemicals-${chem.toLowerCase()}s`,\n            title: `${chem}s`,\n            type: 'paneldynamic',\n            panelCount: 0,\n            panelAddText: `Add ${chem}`,\n            panelRemoveText: `Remove ${chem}`,\n            autofill: 'lastused',\n            templateTitle: `${chem} #{panelIndex}`,\n            templateElements: [\n                {\n                    name: `spraying-checmicals-${chem.toLowerCase()}s-product`,\n                    valueName: 'product',\n                    title: 'Product Name',\n                    type: 'text',\n                    isRequired: true,\n                },\n                {\n                    name: `spraying-checmicals-${chem.toLowerCase()}s-amount`,\n                    valueName: 'amount',\n                    title: 'Amount per Acre (this product)',\n                    type: 'text',\n                    inputType: 'number',\n                    isRequired: true,\n                },\n            ],\n        })),\n};\n","export default {\n    name: 'tillage-conditions',\n    title: 'Conditions',\n    visibleIf: '{purpose} == \"Tillage\"',\n    elements: [\n        {\n            name: 'tillage-conditions-residue-start',\n            title: 'Residue Cover (%) at Start',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n        },\n        {\n            name: 'tillage-conditions-residue-after',\n            title: 'Residue Cover (%) after Tillage',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n        },\n        {\n            name: 'tillage-conditions-soil-temp',\n            title: 'Soil Temperature (℉)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: true,\n            placeHolder: '50 F',\n        },\n        {\n            name: 'tillage-conditions-soil-moisture',\n            title: 'Soil Moisture (%)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: true,\n            placeHolder: '23 %',\n        },\n        {\n            name: 'tillage-conditions-field-condition-start',\n            title: 'Field Condition at Start',\n            type: 'text',\n            isRequired: false,\n            autocomplete: 'previous',\n        },\n        {\n            name: 'tillage-conditions-field-condition-after',\n            title: 'Field Condition after Tillage',\n            type: 'text',\n            isRequired: false,\n            autocomplete: 'previous',\n        },\n    ],\n};\n\n","export default {\n    name: 'b4ufly',\n    title: 'B4UFLY Status',\n    visible: false, // Get rid of B4UFLY page for now\n    elements: [\n        {\n            name: 'b4ufly-status',\n            title: 'Status',\n            type: 'dropdown',\n            isRequired: true,\n            choices: [\n                'proceed with caution',\n                'flying in controlled airspace (class B/C/D/E)',\n                'other',\n            ],\n        },\n        {\n            name: 'b4ufly-extra',\n            title: '',\n            type: 'panel',\n            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\n            elements: [\n                {\n                    name: 'b4ufly-airport-operator',\n                    title: 'Airport Operator Contact',\n                    type: 'text',\n                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n                {\n                    name: 'b4ufly-control-tower',\n                    title: 'Control Tower Contact',\n                    type: 'text',\n                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n                {\n                    name: 'b4ufly-prior-authorization',\n                    title: 'Prior Authorization',\n                    type: 'text',\n                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n            ],\n        },\n        {\n            // TODO: What the heck even is this?\n            name: 'b4ufly-options',\n            title: 'Options',\n            type: 'checkbox',\n            isRequired: true,\n            choices: [\n                'checked NOTAMS',\n                'checked flight restrictions',\n                'checked local restrictions',\n                'checked upcoming restrictions',\n                'checked national parks',\n            ],\n        },\n        {\n            name: 'b4ufly-certificate',\n            title: 'COW or COA #',\n            type: 'text',\n        },\n    ],\n};\n","// TODO: Get these from sheets\nconst drones = [\n    {\n        make: 'Test',\n        model: 'testtest',\n        type: 'Fixed wing',\n    },\n];\n\nexport default {\n    name: 'uav-drone',\n    title: 'UAV Info',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            // TODO: make required for submission only\n            name: 'drone-screenshots',\n            title: 'Flight Planning Screenshots',\n            type: 'panel',\n            elements: [\n                {\n                    name: 'drone-flight-planning',\n                    title: 'Screenshot of Flight Planning',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n                {\n                    name: 'drone-advanced-flight-planning',\n                    title: 'Screenshot of Advanced Flight Planning',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n            ],\n        },\n        {\n            name: 'drone-qr',\n            title: 'Scan drone QR code',\n            type: 'html',\n            cerebralbutton: 'showDroneQRScanner',\n            visible: false,\n        },\n        {\n            name: 'uav-drone-type',\n            title: 'Type',\n            type: 'dropdown',\n            isRequired: true,\n            defaultValue: 'Fixed wing',\n            hasOther: true,\n            choices: [\n                'Fixed wing',\n                'Multi-rotor',\n                'Helicopter',\n            ],\n        },\n        {\n            name: 'uav-drone-makemodel',\n            title: 'Make and Model',\n            type: 'dropdown',\n            autofill: 'lastused',\n            hideIfChoicesEmpty: false,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText: 'Please enter the new make and model',\n            choices: drones.map((e, i) => ({\n                text: e.make + ' ' + e.model,\n                value: e.make + ' ' + e.model,\n                //value: i,\n                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\n            })),\n        },\n    ]\n};\n","export default {\n    name: 'uav-operator',\n    title: 'UAV Operator',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            name: 'remote-pics',\n            title: 'Remote Pilot in Command (PIC)',\n            description: 'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\n            type: 'paneldynamic',\n            panelCount: 1,\n            minPanelCount: 1,\n            panelAddText: 'Add Remote PIC',\n            panelRemoveText: 'Remove Remote PIC',\n            autofill: 'lastused',\n            templateTitle: 'Remote PIC #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'remote-pic-name',\n                    title: 'Name',\n                    type: 'text',\n                    autocomplete: 'previous',\n                    //autofill: 'person',\n                    isRequired: true,\n                    placeHolder: 'Rusty Shackleford',\n                },\n                {\n                    name: 'remote-pic-certificate',\n                    title: 'Certificate Number or equivalent',\n                    type: 'text',\n                    inputType: 'number',\n                    isRequired: true,\n                    placeHolder: '1234567',\n                    validators: [\n                        {\n                            type: 'regex',\n                            regex: /^[0-9]{7}$/,\n                            text: 'License number must be 7 digits'\n                        }\n                    ]\n                },\n\n            ],\n        },\n        {\n            name: 'observer',\n            title: 'Visual Observer (VO)',\n            description: 'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\n            type: 'paneldynamic',\n            panelCount: 0,\n            panelAddText: 'Add VO',\n            panelRemoveText: 'Remove VO',\n            templateTitle: 'VO #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'observer-name',\n                    title: 'Name',\n                    type: 'text',\n                    isRequired: true,\n                    placeHolder: 'John Doe'\n                },\n            ],\n        },\n    ]\n};\n","// TODO: Get these from sheets\nconst sensors = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\n\nexport default {\n    name: 'uav-sensors',\n    title: 'Sensors',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            name: 'sensor-qr',\n            type: 'html',\n            cerebralbutton: 'showSensorQRScanner',\n            visible: false,\n        },\n        {\n            name: 'sensors',\n            title: 'Sensors',\n            type: 'paneldynamic',\n            panelCount: 0,\n            panelAddText: 'Add Sensor',\n            panelRemoveText: 'Remove Sensor',\n            autofill: 'lastused',\n            templateTitle: 'Sensor #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'uav-sensor-type',\n                    valueName: 'type',\n                    title: 'Type',\n                    type: 'dropdown',\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new type',\n                    otherErrorText: 'Please enter the new type',\n                    choices: [\n                        'RGB',\n                        'Multispectral',\n                        'Hyperspectral',\n                        'LiDAR',\n                        'Thermal',\n                    ],\n                },\n                {\n                    name: 'uav-sensor-makemodel',\n                    title: 'Make and Model',\n                    type: 'dropdown',\n                    hideIfChoicesEmpty: false,\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new make and model',\n                    otherErrorText:\n                        'Please enter the new make and model',\n                    choices: sensors.map((e, i) => ({\n                        text: e.make + ' ' + e.model,\n                        value: e.make + ' ' + e.model,\n                        //value: i,\n                        visibleIf: `{panel.type} == \"${e.type}\"`,\n                    })),\n                },\n            ],\n        },\n    ],\n};\n","import * as pages0 from './pages/0-general.js'; import * as pages1 from './pages/1-place.js'; import * as pages2 from './pages/anomalies.js'; import * as pages3 from './pages/harvest/conditions.js'; import * as pages4 from './pages/harvest/transport.js'; import * as pages5 from './pages/machinery.js'; import * as pages6 from './pages/planting/chemicals.js'; import * as pages7 from './pages/planting/seed.js'; import * as pages8 from './pages/spraying/chemicals.js'; import * as pages9 from './pages/tillage/conditions.js'; import * as pages10 from './pages/uav/b4ufly.js'; import * as pages11 from './pages/uav/drone.js'; import * as pages12 from './pages/uav/operator.js'; import * as pages13 from './pages/uav/sensors.js'; let pages = [pages0, pages1, pages2, pages3, pages4, pages5, pages6, pages7, pages8, pages9, pages10, pages11, pages12, pages13];\n\n// Load the default export of all pages\nexport default pages.map(page => page.default);\n","/* eslint import/no-webpack-loader-syntax: off */\nimport pages from '!import-glob!./pages-loader';\n\npages.forEach(page => {\n    // Add a footer to each page\n    page.elements.push(\n        {\n            name: `notes-${page.name}`,\n            title: 'Notes or comments',\n            type: 'comment',\n        },\n        {\n            type: 'html',\n            html: '* Indicates required field',\n        },\n    );\n});\n\nexport default pages;\n","import localstore from './modules/localstore';\n\nimport * as providers from './providers';\nimport * as sequences from './sequences';\nimport * as computeds from './computeds';\nimport * as errors from './errors';\n\n// TODO: Should this be here??\nimport pages from '../pages';\n\n// Parts of state to keep in localstorage\nconst store = localstore(['pageNum', 'surveyData']);\n\nexport default {\n    sequences,\n    state: {\n        ...computeds,\n        initialized: false,\n        loggedin: null,\n        appdataId: null,\n        resultsId: null,\n        submitting: false,\n        navigationOpen: false,\n        confirmSubmitOpen: false,\n        droneQRScannerActive: false,\n        sensorQRScannerActive: false,\n        surveyData: null,\n        pastData: [],\n        pages: [],\n        pageNum: 0,\n        questions: {\n            showNavigationButtons: false,\n            goNextPageAutomatic: true,\n            clearInvisibleValues: 'onHidden',\n            checkErrorsMode: 'onValueChanged',\n            pages,\n        },\n    },\n    catch: [\n        // TODO: Pop up toast or something about giving permission?\n        //[errors.GetLocationError, ({error}) => console.error(error)],\n        //[Error, ({error}) => console.error(error)],\n        [Error, sequences.displayError],\n    ],\n    providers,\n    modules: {\n        store,\n        //storage,\n    },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from 'cerebral';\nimport {Container} from '@cerebral/react';\nimport Devtools from 'cerebral/devtools';\n\nimport AppComponent from './App';\nimport main from './main';\n\nconst app = App(main, {\n    devtools: process.env.NODE_ENV === 'production' ?\n        null : Devtools({host: 'localhost:8000', reconnect: true}),\n    throwToConsole: true,\n    noRethrow: false,\n    returnSequencePromise: true,\n});\n\n// Run init sequence\napp.on('initialized:model', () => console.log('sadsad') && app.getSequence('init')());\n\nReactDOM.render(\n    <Container app={app}>\n        <AppComponent />\n    </Container>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n    serviceWorker.register();\n} else {\n    serviceWorker.unregister();\n}\n"],"sourceRoot":""}